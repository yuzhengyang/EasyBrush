<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Azylee.Core</name>
    </assembly>
    <members>
        <member name="M:Azylee.Core.AppUtils.AppInfoTool.Processor">
            <summary>
            读取APP Processor（可读取App的CPU使用率）
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.AppUtils.AppInfoTool.Processor(System.Diagnostics.Process)">
            <summary>
            读取进程CPU使用率（同名进程无法支持）
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.AppUtils.AppInfoTool.CalcCpuRate(System.Diagnostics.Process,System.TimeSpan,System.Int32)">
            <summary>
            计算CPU占用率
            </summary>
            <param name="process"></param>
            <param name="begin"></param>
            <param name="end"></param>
            <param name="interval"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.AppUtils.AppInfoTool.CalcCpuRate(System.Diagnostics.Process,System.TimeSpan@,System.Int32)">
            <summary>
            计算CPU占用率（自动刷新TimeSpan）
            </summary>
            <param name="process"></param>
            <param name="begin"></param>
            <param name="end"></param>
            <param name="interval"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.AppUtils.AppInfoTool.RAM">
            <summary>
            读取APP占用内存（单位：KB）
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.AppUtils.AppLaunchTool.StartNewVersion(System.String,System.String)">
            <summary>
            启动最新版本程序
            </summary>
            <param name="route">路径：程序版本文件夹路径</param>
            <param name="exeFile">可执行文件名</param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.AppUtils.AppLaunchTool.HasNewVersion(System.String,System.String)">
            <summary>
            查询是否有最新版本程序可以执行
            </summary>
            <param name="route">路径：程序版本文件夹路径</param>
            <param name="startfilename">可执行文件名</param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.AppUtils.AppLaunchTool.GetNewVersion(System.String,System.String,System.Version@,System.String@)">
            <summary>
            获取最新版本号
            </summary>
            <param name="route">路径：程序版本文件夹路径</param>
            <param name="exeFile">可执行文件名</param>
            <returns></returns>
        </member>
        <member name="T:Azylee.Core.AppUtils.AppSettleTool">
            <summary>
            客户端定居工具
            </summary>
        </member>
        <member name="M:Azylee.Core.AppUtils.AppSettleTool.IsSettle(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            判断是否已定居
            </summary>
            <param name="path">定居路径</param>
            <param name="list">货物清单</param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.AppUtils.AppSettleTool.Settle(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            定居
            </summary>
            <param name="path">定居路径</param>
            <param name="list">货物清单</param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.AppUtils.AppUnique.IsUnique(System.String)">
            <summary>
            判断应用在当前系统实例下是否唯一（搭配 ApplicationAPI.Raise() 食用更佳）
            </summary>
            <param name="appName"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.AppUtils.PermissionTool.IsAdministrator">
            <summary>
            当前登录用户是否为管理员
            百万次执行时间：26947、28705、28244 ms
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.AppUtils.PermissionTool.IsAdmin">
            <summary>
            当前登录用户是否为管理员
            百万次执行时间：8063、9097、9755 ms
            </summary>
            <returns></returns>
        </member>
        <member name="T:Azylee.Core.AppUtils.StartupTool">
            <summary>
            设为开机启动
            </summary>
        </member>
        <member name="M:Azylee.Core.DataUtils.CollectionUtils.ArrayTool.Formatter``1(``0[],System.Int32)">
            <summary>
            格式化[]数组个数
            </summary>
            <param name="array">数组</param>
            <param name="size">要格式化为多少个</param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DataUtils.CollectionUtils.ArrayTool.Formatter``1(``0[],``0,System.Int32)">
            <summary>
            格式化[]数组个数
            </summary>
            <typeparam name="T"></typeparam>
            <param name="array">数组</param>
            <param name="defaultValue">默认值</param>
            <param name="size">要格式化为多少个</param>
            <returns></returns>
        </member>
        <member name="T:Azylee.Core.DataUtils.CollectionUtils.ListTool">
            <summary>
            元素列表工具类
            </summary>
        </member>
        <member name="M:Azylee.Core.DataUtils.CollectionUtils.ListTool.IsNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            列表为空（null 或 count 等于 0）
            </summary>
            <typeparam name="T">元素类型</typeparam>
            <param name="list">元素列表</param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DataUtils.CollectionUtils.ListTool.HasElements``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            列表至少有一个元素
            </summary>
            <typeparam name="T">元素类型</typeparam>
            <param name="list">元素列表</param>
            <returns></returns>
        </member>
        <member name="T:Azylee.Core.DataUtils.CollectionUtils.Ls">
            <summary>
            ListTool
            </summary>
        </member>
        <member name="M:Azylee.Core.DataUtils.CollectionUtils.Ls.Ok``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            列表至少有一个元素
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DataUtils.CollectionUtils.Ls.ok``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            列表至少有一个元素
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="T:Azylee.Core.DataUtils.CompressionUtils.Compression">
            <summary>
            压缩工具
            </summary>
        </member>
        <member name="M:Azylee.Core.DataUtils.CompressionUtils.Compression.Compress(System.Byte[])">
            <summary>
            压缩字节
            1.创建压缩的数据流 
            2.设定compressStream为存放被压缩的文件流,并设定为压缩模式
            3.将需要压缩的字节写到被压缩的文件流
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DataUtils.CompressionUtils.Compression.Decompress(System.Byte[])">
            <summary>
            解压缩字节
            1.创建被压缩的数据流
            2.创建zipStream对象，并传入解压的文件流
            3.创建目标流
            4.zipStream拷贝到目标流
            5.返回目标流输出字节
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="T:Azylee.Core.DataUtils.CurrencyUtils.RMB">
            <summary> 
            RMB 的摘要说明。 
            </summary> 
        </member>
        <member name="M:Azylee.Core.DataUtils.CurrencyUtils.RMB.CmycurD(System.Decimal)">
            <summary> 
            转换人民币大小金额 
            </summary> 
            <param name="num">金额</param> 
            <returns>返回大写形式</returns> 
        </member>
        <member name="M:Azylee.Core.DataUtils.CurrencyUtils.RMB.CmycurD(System.String)">
            <summary> 
            一个重载，将字符串先转换成数字在调用CmycurD(decimal num) 
            </summary> 
            <param name="num">用户输入的金额，字符串形式未转成decimal</param> 
            <returns></returns> 
        </member>
        <member name="T:Azylee.Core.DataUtils.DateTimeUtils.DateTimeConvert">
            <summary>
            日期格式转换工具
            </summary>
        </member>
        <member name="M:Azylee.Core.DataUtils.DateTimeUtils.DateTimeConvert.StandardString(System.DateTime)">
            <summary>
            yyyy-MM-dd HH:mm:ss
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DataUtils.DateTimeUtils.DateTimeConvert.CompactString(System.DateTime)">
            <summary>
            yyyyMMddHHmmss
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DataUtils.DateTimeUtils.DateTimeConvert.DetailString(System.DateTime)">
            <summary>
            yyyy-MM-dd HH:mm:ss.fff
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DataUtils.DateTimeUtils.DateTool.MonthDays(System.Int32,System.Int32)">
            <summary>
            当月有多少天
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="T:Azylee.Core.DataUtils.DateTimeUtils.TimeDiff">
            <summary>
            时间差
            </summary>
        </member>
        <member name="M:Azylee.Core.DataUtils.DateTimeUtils.TimeDiff.Sec(System.DateTime)">
            <summary>
            当前时间差（秒）
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DataUtils.DateTimeUtils.TimeStampTool.Get">
            <summary>  
            获取时间戳  
            </summary>  
            <returns></returns>  
        </member>
        <member name="T:Azylee.Core.DataUtils.DateTimeUtils.TimeTool">
            <summary>
            时间计算工具类
            </summary>
        </member>
        <member name="T:Azylee.Core.DataUtils.DateTimeUtils.WeekDayTool">
            <summary>
            日期转换周
            </summary>
        </member>
        <member name="M:Azylee.Core.DataUtils.DateTimeUtils.WeekDayTool.ToWeekDay(System.DateTime)">
            <summary>
            显示日期为周几
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DataUtils.EncryptUtils.AesTool.Encrypt(System.String,System.String)">
            <summary>
            加密
            </summary>
            <param name="str">要加密的 string 字符串</param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DataUtils.EncryptUtils.AesTool.Encrypt(System.Byte[],System.String)">
            <summary>
            加密
            </summary>
            <param name="array">要加密的 byte[] 数组</param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DataUtils.EncryptUtils.AesTool.Decrypt(System.String,System.String)">
            <summary>
            解密
            </summary>
            <param name="str">要解密的 string 字符串</param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DataUtils.EncryptUtils.AesTool.Decrypt(System.Byte[],System.String)">
            <summary>
            解密
            </summary>
            <param name="array">要解密的 byte[] 数组</param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DataUtils.EncryptUtils.AesTool.FmtPassword(System.String)">
            <summary>
            格式化密码
            </summary>
            <param name="s">要格式化的密码</param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DataUtils.EncryptUtils.DesTool.Encrypt(System.String,System.String)">
            <summary>
            DESEnCode DES加密
            </summary>
            <param name="pToEncrypt"></param>
            <param name="sKey"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DataUtils.EncryptUtils.DesTool.Decrypt(System.String,System.String)">
            <summary>
            DESDeCode DES解密
            </summary>
            <param name="pToDecrypt"></param>
            <param name="sKey"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DataUtils.EncryptUtils.MD5OTool.Encrypt(System.String)">
            <summary>
            计算data的MD5值
            </summary>
        </member>
        <member name="M:Azylee.Core.DataUtils.EncryptUtils.MD5OTool.Encrypt(System.Byte[])">
            <summary>
            计算byte数组的MD5值
            </summary>
        </member>
        <member name="M:Azylee.Core.DataUtils.EncryptUtils.MD5OTool.Encrypt(System.IO.FileInfo)">
            <summary>
            计算文件的MD5值
            </summary>
        </member>
        <member name="M:Azylee.Core.DataUtils.EncryptUtils.MD5OTool.To16Array(System.Byte[])">
            <summary>
            转化byte数组为uint数组，数组长度为16的倍数
            
            1、字符串转化为字节数组，每4个字节转化为一个uint，依次存储到uint数组
            2、附加0x80作为最后一个字节
            3、在uint数组最后位置记录文件字节长度信息
            </summary>
        </member>
        <member name="M:Azylee.Core.DataUtils.EncryptUtils.MD5OTool.To16Array(System.String)">
            <summary>
            转化字符串为uint数组，数组长度为16的倍数
            
            1、字符串转化为字节数组，每4个字节转化为一个uint，依次存储到uint数组
            2、附加0x80作为最后一个字节
            3、在uint数组最后位置记录文件字节长度信息
            </summary>
        </member>
        <member name="M:Azylee.Core.DataUtils.EncryptUtils.MD5OTool.To16Array(System.IO.FileInfo)">
            <summary>
            转化文件为uint数组，数组长度为16的倍数
            
            1、读取文件字节信息，每4个字节转化为一个uint，依次存储到uint数组
            2、附加0x80作为最后一个字节
            3、在uint数组最后位置记录文件字节长度信息
            </summary>
        </member>
        <member name="M:Azylee.Core.DataUtils.EncryptUtils.MD5OTool.calculate(System.UInt32[])">
            <summary>
            对长度为16倍数的uint数组，执行md5数据摘要，输出md5信息
            </summary>
        </member>
        <member name="M:Azylee.Core.DataUtils.EncryptUtils.MD5Tool.Encrypt(System.String)">
            <summary>
            给一个字符串进行MD5加密
            </summary>
            <param name="s">待加密字符串</param>
            <returns>加密后的字符串</returns>
        </member>
        <member name="T:Azylee.Core.DataUtils.EnumUtils.FlagsEnumTool">
            <summary>
            标志枚举修改工具
            弃用：效率太低
            sa = sa | StatusAttributes.Join;//添加属性
            sa = (sa | StatusAttributes.Share) ^ StatusAttributes.Share;//删除属性
            </summary>
        </member>
        <member name="M:Azylee.Core.DataUtils.GuidUtils.GuidTool.Short">
            <summary>
            //短GUID：e0a953c3ee6040eaa9fae2b667060e09
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DataUtils.GuidUtils.GuidTool.Short(System.Guid)">
            <summary>
            //转换短GUID：e0a953c3ee6040eaa9fae2b667060e09
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DataUtils.GuidUtils.GuidTool.Short(System.String)">
            <summary>
            //转换短GUID：e0a953c3ee6040eaa9fae2b667060e09
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DataUtils.SerializeUtils.SerializeTool.Serialize``1(``0)">
            <summary>
            序列化模型到 byte 数组 [Serializable]
            </summary>
            <typeparam name="T"></typeparam>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DataUtils.StringUtils.Str.Ok(System.String)">
            <summary>
            判断字符串 非null、""、空格（Not NullOrWhiteSpace）
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DataUtils.StringUtils.Str.Ok(System.String[])">
            <summary>
            批量判断字符串 非null、""、空格（Not NullOrWhiteSpace）
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DataUtils.StringUtils.Str.Ok2(System.String)">
            <summary>
            判断字符串 非null、""（Not NullOrEmpty）
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DataUtils.StringUtils.Str.Ok2(System.String[])">
            <summary>
            批量判断字符串 非null、""（Not NullOrEmpty）
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="T:Azylee.Core.DataUtils.StringUtils.StringExtension">
            <summary>
            String类型扩展方法
            </summary>
        </member>
        <member name="M:Azylee.Core.DataUtils.StringUtils.StringExtension.Ok(System.String)">
            <summary>
            判断字符串 非null、""、空格（Not NullOrWhiteSpace）
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DataUtils.StringUtils.StringTool.Ok(System.String)">
            <summary>
            判断字符串 非null、""、空格（Not NullOrWhiteSpace）
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DataUtils.StringUtils.StringTool.Ok2(System.String)">
            <summary>
            判断字符串 非null、""（Not NullOrEmpty）
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DataUtils.StringUtils.StringTool.IsNullOrWhiteSpace(System.String)">
            <summary>
            判断字符串为null或为空格
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DataUtils.StringUtils.StringTool.Contains(System.String,System.String)">
            <summary>
            查看字符串包含字符（不区分大小写）
            </summary>
            <param name="s"></param>
            <param name="word"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DataUtils.StringUtils.StringTool.Split(System.String,System.Char,System.String[]@)">
            <summary>
            分割字符串
            </summary>
            <param name="str"></param>
            <param name="separator"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DataUtils.StringUtils.StringTool.SubStringCount(System.String,System.String)">
            <summary>
            字符串中字符出现次数
            </summary>
            <param name="s"></param>
            <param name="sub"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DataUtils.StringUtils.StringTool.IsMatch(System.String,System.String)">
            <summary>
            根据通配符验证字符串
            </summary>
            <param name="s">字符串</param>
            <param name="pattern">通配符：%和_</param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DataUtils.StringUtils.StringTool.ReplaceNewLine(System.String,System.String)">
            <summary>
            使用指定字符替换字符串中换行符
            </summary>
            <param name="s"></param>
            <param name="sign"></param>
            <returns></returns>
        </member>
        <member name="T:Azylee.Core.DataUtils.UnitConvertUtils.ByteConvertTool">
            <summary>
            计算机字节单位转换工具
            </summary>
        </member>
        <member name="M:Azylee.Core.DataUtils.UnitConvertUtils.ByteConvertTool.Fmt(System.Int64,System.Int32)">
            <summary>
            自动格式化字节单位
            </summary>
            <param name="size"></param>
            <param name="digits"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DataUtils.UnitConvertUtils.ByteConvertTool.Fmt(System.Double,System.Int32)">
            <summary>
            自动格式化字节单位
            </summary>
            <param name="size"></param>
            <param name="digits"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DataUtils.UnitConvertUtils.ByteConvertTool.Cvt(System.Int64,System.String,System.Int32)">
            <summary>
            根据单位换算
            </summary>
            <param name="size"></param>
            <param name="unit"></param>
            <param name="digits"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DataUtils.UnitConvertUtils.ByteConvertTool.Cvt(System.Double,System.String,System.Int32)">
            <summary>
            根据单位换算
            </summary>
            <param name="size"></param>
            <param name="unit"></param>
            <param name="digits"></param>
            <returns></returns>
        </member>
        <member name="T:Azylee.Core.DrawingUtils.ImageUtils.IMG">
            <summary>
            图片操作工具类
            </summary>
        </member>
        <member name="M:Azylee.Core.DrawingUtils.ImageUtils.IMG.Thumbnail(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Drawing2D.InterpolationMode,System.Drawing.Drawing2D.SmoothingMode)">
            <summary>
            创建缩略图
            </summary>
            <param name="img"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="interpolation"></param>
            <param name="smoothing"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DrawingUtils.ImageUtils.IMG.CompressionToByte(System.Drawing.Image,System.Int32)">
            <summary>
            压缩图片
            </summary>
            <param name="bitmap"></param>
            <param name="quality">0-100</param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="T:Azylee.Core.DrawingUtils.ImageUtils.ScreenCapture">
            <summary>
            屏幕捕获类
            </summary>
        </member>
        <member name="M:Azylee.Core.DrawingUtils.ImageUtils.ScreenCapture.Capture">
            <summary>
            Winform 屏幕截图
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DrawingUtils.ImageUtils.ScreenCapture.BitBlt(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            把当前屏幕捕获到位图对象中
            </summary>
            <param name="hdcDest">目标设备的句柄</param>
            <param name="nXDest">目标对象的左上角的X坐标</param>
            <param name="nYDest">目标对象的左上角的X坐标</param>
            <param name="nWidth">目标对象的矩形的宽度</param>
            <param name="nHeight">目标对象的矩形的长度</param>
            <param name="hdcSrc">源设备的句柄</param>
            <param name="nXSrc">源对象的左上角的X坐标</param>
            <param name="nYSrc">源对象的左上角的X坐标</param>
            <param name="dwRop">光栅的操作值</param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DrawingUtils.ImageUtils.ScreenCapture.CaptureDC">
            <summary>
            屏幕捕获到位图对象中
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.DrawingUtils.ImageUtils.ScreenCapture.DrawCursorImageToScreenImage(System.Drawing.Graphics@)">
            <summary>  
            将鼠标指针形状绘制到屏幕截图上  
            </summary>  
            <param name="g"></param>  
        </member>
        <member name="T:Azylee.Core.FormUtils.FormManTool">
            <summary>
            窗体管理器
            </summary>
        </member>
        <member name="M:Azylee.Core.FormUtils.FormManTool.GetUnique``1">
            <summary>
            获取唯一窗体对象
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.FormUtils.FormManTool.SetAllBackColor(System.Drawing.Color)">
            <summary>
            设置所有窗体的背景色
            </summary>
            <param name="c"></param>
        </member>
        <member name="M:Azylee.Core.IOUtils.DirUtils.DirFinder.GetPath(System.String)">
            <summary>
            获取目录下的目录（一层）
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.DirUtils.DirFinder.GetAllPath(System.String)">
            <summary>
            获取目录下所有目录（递归）
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:Azylee.Core.IOUtils.DirUtils.DirTool">
            <summary>
            文件目录工具类
            </summary>
        </member>
        <member name="M:Azylee.Core.IOUtils.DirUtils.DirTool.Create(System.String)">
            <summary>
            创建文件目录（文件不存在则创建）
            </summary>
            <param name="path"></param>
            <returns>
            如果文件已存在，返回true
            如果文件不存在，则创建文件，成功返回true，失败返回false
            </returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.DirUtils.DirTool.Parent(System.String)">
            <summary>
            获取目录的父目录
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.DirUtils.DirTool.GetPath(System.String)">
            <summary>
            获取目录下的目录（一层）
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.DirUtils.DirTool.GetAllPath(System.String)">
            <summary>
            获取目录下所有目录（递归）
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.DirUtils.DirTool.IsDriver(System.String)">
            <summary>
            判断目录是否为磁盘
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.DirUtils.DirTool.GetFilePath(System.String)">
            <summary>
            获取文件所在的目录
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.DirUtils.DirTool.Combine(System.String[])">
            <summary>
            连接多个string构成目录
            </summary>
            <param name="paths"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.DirUtils.DirTool.Include(System.String,System.String)">
            <summary>
            路径包含关系
            </summary>
            <param name="path1"></param>
            <param name="path2"></param>
            <returns>
            -1：不存在包含关系
            0：两个目录相同
            1：path1 包含 path2（path1 大）
            2：path2 包含 path1（path2 大）
            </returns>
        </member>
        <member name="T:Azylee.Core.IOUtils.FileManUtils.FileWatcher">
            <summary>
            文件更改通知
            </summary>
        </member>
        <member name="T:Azylee.Core.IOUtils.FileManUtils.FileWatcher.FileWatcherEventHandler">
            <summary>
            接受文件监控信息的事件委托
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="F:Azylee.Core.IOUtils.FileManUtils.FileWatcher.EventHandler">
            <summary>
            获取文件监控信息
            </summary>
        </member>
        <member name="P:Azylee.Core.IOUtils.FileManUtils.FileWatcher.IsWatching">
            <summary>
            文件更改监控已启动
            </summary>
        </member>
        <member name="M:Azylee.Core.IOUtils.FileManUtils.FileWatcher.#ctor(System.String[])">
            <summary>
            创建文件监控类
            </summary>
            <param name="paths"></param>
        </member>
        <member name="M:Azylee.Core.IOUtils.FileManUtils.FileWatcher.Start">
            <summary>
            启动文件监测
            </summary>
        </member>
        <member name="M:Azylee.Core.IOUtils.FileManUtils.FileWatcher.Stop">
            <summary>
            停止文件监测
            </summary>
        </member>
        <member name="T:Azylee.Core.IOUtils.FileUtils.FileCodeTool">
            <summary>
            获取文件特征码（MD5，SHA1）
            </summary>
        </member>
        <member name="M:Azylee.Core.IOUtils.FileUtils.FileCodeTool.GetMD5(System.String)">
            <summary>
            计算文件的 MD5 值
            </summary>
            <param name="fileName">要计算 MD5 值的文件名和路径</param>
            <returns>MD5 值16进制字符串</returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.FileUtils.FileCodeTool.GetSHA1(System.String)">
            <summary>
            计算文件的 sha1 值
            </summary>
            <param name="fileName">要计算 sha1 值的文件名和路径</param>
            <returns>sha1 值16进制字符串</returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.FileUtils.FileCodeTool.HashFile(System.String,System.String)">
            <summary>
            计算文件的哈希值
            </summary>
            <param name="fileName">要计算哈希值的文件名和路径</param>
            <param name="algName">算法:sha1,md5</param>
            <returns>哈希值16进制字符串</returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.FileUtils.FileCodeTool.HashData(System.IO.Stream,System.String)">
            <summary>
            计算哈希值
            </summary>
            <param name="stream">要计算哈希值的 Stream</param>
            <param name="algName">算法:sha1,md5</param>
            <returns>哈希值字节数组</returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.FileUtils.FileCodeTool.ByteArrayToHexString(System.Byte[])">
            <summary>
            字节数组转换为16进制表示的字符串
            </summary>
        </member>
        <member name="T:Azylee.Core.IOUtils.FileUtils.FileCompressTool">
            <summary>
            文件压缩
            </summary>
        </member>
        <member name="M:Azylee.Core.IOUtils.FileUtils.FileCompressTool.Compress(System.String)">
            <summary>
            压缩
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.FileUtils.FileCompressTool.Decompress(System.String)">
            <summary>
            解压缩
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.FileUtils.FileCompressTool.CompressSingle(System.String)">
            <summary>
            单文件压缩（生成的压缩包和第三方的解压软件兼容）
            </summary>
            <param name="sourceFilePath"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.FileUtils.FileCompressTool.CompressMulti(System.String[],System.String)">
            <summary>
            自定义多文件压缩（生成的压缩包和第三方的压缩文件解压不兼容）
            </summary>
            <param name="sourceFileList">文件列表</param>
            <param name="saveFullPath">压缩包全路径</param>
        </member>
        <member name="M:Azylee.Core.IOUtils.FileUtils.FileCompressTool.DeCompressMulti(System.String,System.String)">
            <summary>
            多文件压缩解压
            </summary>
            <param name="zipPath">压缩文件路径</param>
            <param name="targetPath">解压目录</param>
        </member>
        <member name="T:Azylee.Core.IOUtils.FileUtils.FileEncryptTool">
            <summary>
            文件加密工具
            </summary>
        </member>
        <member name="M:Azylee.Core.IOUtils.FileUtils.FileEncryptTool.Encrypt(System.String,System.String,System.String,Azylee.Core.DelegateUtils.ProcessDelegateUtils.ProgressDelegate.ProgressHandler,System.Object,System.Boolean)">
            <summary>
            文件加密
            </summary>
            <param name="srcFile">源文件</param>
            <param name="dstFile">目标文件</param>
            <param name="password">加密密码</param>
            <param name="progress">回调进度</param>
            <param name="overwrite">是否覆盖已有目标文件</param>
            <returns>
            >0：操作成功（操作共计秒数）
            -11：要加密的文件不存在
            -12：加密后的目标文件已存在
            -404：未知错误，操作失败
            </returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.FileUtils.FileEncryptTool.Decrypt(System.String,System.String,System.String,Azylee.Core.DelegateUtils.ProcessDelegateUtils.ProgressDelegate.ProgressHandler,System.Object,System.Boolean)">
            <summary>
            文件解密
            </summary>
            <param name="srcFile">源文件</param>
            <param name="dstFile">目标文件</param>
            <param name="password">解密密码</param>
            <param name="progress">回调进度</param>
            <param name="overwrite">是否覆盖已有目标文件</param>
            <returns>
            >0：操作成功（操作共计秒数）
            -11：要解密的文件不存在
            -12：解密后的目标文件已存在
            -20：文件类型不匹配
            -30：文件头不长度不吻合
            -90：解锁密码错误
            -404：未知错误，操作失败
            </returns>
        </member>
        <member name="T:Azylee.Core.IOUtils.FileUtils.FileFinder">
            <summary>
            文件搜索
            </summary>
        </member>
        <member name="M:Azylee.Core.IOUtils.FileUtils.FileFinder.GetFile(System.String,System.String)">
            <summary>
            获取文件（单层目录）
            </summary>
            <param name="path">路径</param>
            <param name="pattern">通配符</param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.FileUtils.FileFinder.GetAllFile(System.String,System.Action{System.Collections.Generic.List{System.String}},System.String[])">
            <summary>
            获取所有目录中的所有文件
            </summary>
            <param name="path"></param>
            <param name="action"></param>
            <param name="patterns"></param>
        </member>
        <member name="T:Azylee.Core.IOUtils.FileUtils.FilePackageTool">
            <summary>
            文件打包工具
            </summary>
        </member>
        <member name="M:Azylee.Core.IOUtils.FileUtils.FilePackageTool.Pack(System.String,System.String,Azylee.Core.DelegateUtils.ProcessDelegateUtils.ProgressDelegate.ProgressHandler,System.Object,System.Boolean)">
            <summary>
            文件打包
            </summary>
            <param name="srcPath">要打包的路径</param>
            <param name="dstFile">打包后的文件</param>
            <param name="progress">回调进度</param>
            <param name="overwrite">覆盖打包后的文件（重复时）</param>
            <returns>
            -11;//要打包的路径不存在
            -12;//打包后的目标文件已存在
            -13;//要打包的路径中没有文件
            -14;//输出文件夹不存在
            -404;//未知错误，操作失败
            </returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.FileUtils.FilePackageTool.Unpack(System.String,System.String,Azylee.Core.DelegateUtils.ProcessDelegateUtils.ProgressDelegate.ProgressHandler,System.Object,System.Boolean)">
            <summary>
            拆包
            </summary>
            <param name="srcFile">包文件路径</param>
            <param name="dstPath">拆包到的目录 </param>
            <param name="progress">回调进度</param>
            <param name="overwrite">覆盖拆包后的文件（重复时）</param>
            <returns>
            -11; //要解包的文件不存在
            -12;//要解包的目标文件夹已存在
            -20;// 文件类型不匹配
            -99;//未知错误，操作失败
            </returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.FileUtils.FilePackageTool.GetFileVersion(System.IO.FileStream)">
            <summary>
            获取文件类型的类型版本
            </summary>
            <param name="fs"></param>
            <returns>
            如果文件类型不匹配，则返回null
            </returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.FileUtils.FilePackageTool.GetFilePackageModel(System.Byte[])">
            <summary>
            解析打包文件文件列表
            </summary>
            <param name="headdata"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.FileUtils.FilePackageTool.CreateFilePackageModel(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            创建打包文件列表信息
            </summary>
            <param name="files"></param>
            <param name="srcPath"></param>
            <returns></returns>
        </member>
        <member name="T:Azylee.Core.IOUtils.FileUtils.FileTool">
            <summary>
            文件操作工具
            </summary>
        </member>
        <member name="M:Azylee.Core.IOUtils.FileUtils.FileTool.IsFile(System.String)">
            <summary>
            判断字符串是文件路径
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.FileUtils.FileTool.GetFile(System.String,System.String)">
            <summary>
            获取文件（单层目录）
            </summary>
            <param name="path">路径</param>
            <param name="pattern">通配符</param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.FileUtils.FileTool.GetAllFile(System.String,System.String[])">
            <summary>
            获取目录下的所有文件
            防止遇到（$文件夹报错无法获取目录的错误）
            </summary>
            <param name="path"></param>
            <param name="patterns"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.FileUtils.FileTool.GetAllFile(System.Collections.Generic.List{System.String},System.String[])">
            <summary>
            获取文件（多个目录）
            </summary>
            <param name="paths">路径（支持多个路径）</param>
            <param name="patterns">通配符（支持多个通配符）</param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.FileUtils.FileTool.Delete(System.String)">
            <summary>
            删除文件
            </summary>
            <param name="file">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.FileUtils.FileTool.Delete(System.String[])">
            <summary>
            删除文件（多个）
            </summary>
            <param name="files">文件路径（支持多个文件路径）</param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.FileUtils.FileTool.Size(System.String)">
            <summary>
            获取文件的大小（字节数）
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.FileUtils.FileTool.Size(System.Collections.Generic.List{System.String})">
            <summary>
            获取多个文件的大小（字节数）
            </summary>
            <param name="files"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.FileUtils.FileTool.Size(System.String,System.String)">
            <summary>
            获取文件大小（根据单位换算）
            </summary>
            <param name="fileName"></param>
            <param name="unit">B，KB，MB，GB</param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.FileUtils.FileTool.SizeFormat(System.String)">
            <summary>
            获取文件大小信息（自动适配）（如：1MB，10KB...）
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.FileUtils.FileTool.GetMD5(System.String)">
            <summary>
            获取文件的MD5特征码
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.FileUtils.FileTool.GetMD5(System.Collections.Generic.List{System.String})">
            <summary>
            获取多个文件的MD5特征码
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Azylee.Core.IOUtils.ImageUtils.AffineTool.RotateImg(System.String,System.String,System.Int32)" -->
        <member name="T:Azylee.Core.IOUtils.ImageUtils.CaptchaHelper">
            <summary>
            Captcha
            </summary>
        </member>
        <member name="F:Azylee.Core.IOUtils.ImageUtils.CaptchaHelper.objRandom">
            <summary>
            随机种子
            </summary>
        </member>
        <member name="F:Azylee.Core.IOUtils.ImageUtils.CaptchaHelper.length">
            <summary>
            验证码长度
            </summary>
        </member>
        <member name="P:Azylee.Core.IOUtils.ImageUtils.CaptchaHelper.Length">
            <summary>
            验证码长度(默认为4)
            </summary>
        </member>
        <member name="F:Azylee.Core.IOUtils.ImageUtils.CaptchaHelper.verifyCodeText">
            <summary>
            验证码字符串
            </summary>
        </member>
        <member name="P:Azylee.Core.IOUtils.ImageUtils.CaptchaHelper.VerifyCodeText">
            <summary>
            验证码字符串
            </summary>
        </member>
        <member name="F:Azylee.Core.IOUtils.ImageUtils.CaptchaHelper.addLowerLetter">
            <summary>
            是否加入小写字母
            </summary>
        </member>
        <member name="P:Azylee.Core.IOUtils.ImageUtils.CaptchaHelper.AddLowerLetter">
            <summary>
            是否加入小写字母(不包括o)
            </summary>
        </member>
        <member name="F:Azylee.Core.IOUtils.ImageUtils.CaptchaHelper.addUpperLetter">
            <summary>
            是否加入大写字母
            </summary>
        </member>
        <member name="P:Azylee.Core.IOUtils.ImageUtils.CaptchaHelper.AddUpperLetter">
            <summary>
            是否加入大写字母(不包括O)
            </summary>
        </member>
        <member name="F:Azylee.Core.IOUtils.ImageUtils.CaptchaHelper.fontSize">
            <summary>
            字体大小
            </summary>
        </member>
        <member name="P:Azylee.Core.IOUtils.ImageUtils.CaptchaHelper.FontSize">
            <summary>
            字体大小(默认为18)
            </summary>
        </member>
        <member name="F:Azylee.Core.IOUtils.ImageUtils.CaptchaHelper.fontColor">
            <summary>
            字体颜色
            </summary>
        </member>
        <member name="P:Azylee.Core.IOUtils.ImageUtils.CaptchaHelper.FontColor">
            <summary>
            字体颜色(默认为Blue)
            </summary>
        </member>
        <member name="F:Azylee.Core.IOUtils.ImageUtils.CaptchaHelper.fontFamily">
            <summary>
            字体类型
            </summary>
        </member>
        <member name="P:Azylee.Core.IOUtils.ImageUtils.CaptchaHelper.FontFamily">
            <summary>
            字体类型(默认为Verdana)
            </summary>
        </member>
        <member name="F:Azylee.Core.IOUtils.ImageUtils.CaptchaHelper.backgroundColor">
            <summary>
            背景色
            </summary>
        </member>
        <member name="P:Azylee.Core.IOUtils.ImageUtils.CaptchaHelper.BackgroundColor">
            <summary>
            背景色(默认为AliceBlue)
            </summary>
        </member>
        <member name="F:Azylee.Core.IOUtils.ImageUtils.CaptchaHelper.foreNoisePointCount">
            <summary>
            前景噪点数量
            </summary>
        </member>
        <member name="P:Azylee.Core.IOUtils.ImageUtils.CaptchaHelper.ForeNoisePointCount">
            <summary>
            前景噪点数量(默认为2)
            </summary>
        </member>
        <member name="F:Azylee.Core.IOUtils.ImageUtils.CaptchaHelper.randomAngle">
            <summary>
            随机码的旋转角度
            </summary>
        </member>
        <member name="P:Azylee.Core.IOUtils.ImageUtils.CaptchaHelper.RandomAngle">
            <summary>
            随机码的旋转角度(默认为40度)
            </summary>
        </member>
        <member name="M:Azylee.Core.IOUtils.ImageUtils.CaptchaHelper.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:Azylee.Core.IOUtils.ImageUtils.CaptchaHelper.GetText">
            <summary>
            得到验证码字符串
            </summary>
        </member>
        <member name="M:Azylee.Core.IOUtils.ImageUtils.CaptchaHelper.GetImage">
            <summary>
            得到验证码图片
            </summary>
        </member>
        <member name="M:Azylee.Core.IOUtils.ImageUtils.CaptchaHelper.AddForeNoisePoint(System.Drawing.Bitmap)">
            <summary>
            添加前景噪点
            </summary>
            <param name="objBitmap"></param>
        </member>
        <member name="M:Azylee.Core.IOUtils.ImageUtils.CaptchaHelper.AddBackgroundNoisePoint(System.Drawing.Bitmap,System.Drawing.Graphics)">
            <summary>
            添加背景噪点
            </summary>
            <param name="objBitmap"></param>
            <param name="objGraphics"></param>
        </member>
        <member name="M:Azylee.Core.IOUtils.ImageUtils.IconTool.Save(System.Drawing.Image,System.String)">
            <summary>
            将 Image 保存到指定目录文件名的 Icon
            </summary>
            <param name="image"></param>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.ImageUtils.IconTool.ConvertToIcon(System.Drawing.Image,System.Boolean)">
            <summary>
            转换Image为Icon
            </summary>
            <param name="image">要转换为图标的Image对象</param>
            <param name="nullTonull">当image为null时是否返回null。false则抛空引用异常</param>
            <exception cref="T:System.ArgumentNullException" />
        </member>
        <member name="M:Azylee.Core.IOUtils.ImageUtils.ImageHelper.MakeThumbnail(System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary> 
            生成缩略图 
            </summary> 
            <param name="originalImagePath">源图路径（物理路径）</param> 
            <param name="thumbnailPath">缩略图路径（物理路径）</param> 
            <param name="width">缩略图宽度</param> 
            <param name="height">缩略图高度</param> 
            <param name="mode">生成缩略图的方式</param>     
        </member>
        <member name="M:Azylee.Core.IOUtils.ImageUtils.RotateImageTool.Rotate(System.String,System.String)">
            <summary>
            旋转照片（根据Exif信息的方向）
            </summary>
            <param name="originalImagePath"></param>
            <param name="saveImagePath"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Azylee.Core.IOUtils.ImageUtils.RotateImageTool.Rotate(System.String,System.String,System.Int32)" -->
        <member name="M:Azylee.Core.IOUtils.ImageUtils.ThunbnailTool.Normal(System.Drawing.Bitmap,System.Int32,System.Int32,System.String,System.Drawing.Drawing2D.InterpolationMode,System.Drawing.Drawing2D.SmoothingMode)">
            <summary>
            标准缩略图生成
            </summary>
            <param name="originalImage">原始图像</param>
            <param name="width">指定宽度</param>
            <param name="height">指定高度</param>
            <param name="mode">缩略图模式</param>
            <param name="im">差值模式</param>
            <param name="sm">平滑模式</param>
            <returns></returns>
        </member>
        <member name="T:Azylee.Core.IOUtils.TxtUtils.ConfigTool">
            <summary>
            .NET 读取配置工具
            </summary>
        </member>
        <member name="M:Azylee.Core.IOUtils.TxtUtils.ConfigTool.Get(System.String,System.String)">
            <summary>
            获取配置值
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.TxtUtils.ConfigTool.GetBool(System.String,System.Boolean)">
            <summary>
            获取配置值（bool）
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.TxtUtils.ConfigTool.GetExe(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="exePath"></param>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.IOUtils.TxtUtils.IniTool.GetPrivateProfileSectionNames(System.IntPtr,System.UInt32,System.String)">
            <summary>  
            获取所有节点名称(Section)  
            </summary>  
            <param name="lpszReturnBuffer">存放节点名称的内存地址,每个节点之间用\0分隔</param>  
            <param name="nSize">内存大小(characters)</param>  
            <param name="lpFileName">Ini文件</param>  
            <returns>内容的实际长度,为0表示没有内容,为nSize-2表示内存大小不够</returns>  
        </member>
        <member name="M:Azylee.Core.IOUtils.TxtUtils.IniTool.GetPrivateProfileSection(System.String,System.IntPtr,System.UInt32,System.String)">
            <summary>  
            获取某个指定节点(Section)中所有KEY和Value  
            </summary>  
            <param name="lpAppName">节点名称</param>  
            <param name="lpReturnedString">返回值的内存地址,每个之间用\0分隔</param>  
            <param name="nSize">内存大小(characters)</param>  
            <param name="lpFileName">Ini文件</param>  
            <returns>内容的实际长度,为0表示没有内容,为nSize-2表示内存大小不够</returns>  
        </member>
        <member name="M:Azylee.Core.IOUtils.TxtUtils.IniTool.GetPrivateProfileString(System.String,System.String,System.String,System.Char[],System.UInt32,System.String)">
            <summary>  
            读取INI文件中指定的Key的值  
            </summary>  
            <param name="lpAppName">节点名称。如果为null,则读取INI中所有节点名称,每个节点名称之间用\0分隔</param>  
            <param name="lpKeyName">Key名称。如果为null,则读取INI中指定节点中的所有KEY,每个KEY之间用\0分隔</param>  
            <param name="lpDefault">读取失败时的默认值</param>  
            <param name="lpReturnedString">读取的内容缓冲区，读取之后，多余的地方使用\0填充</param>  
            <param name="nSize">内容缓冲区的长度</param>  
            <param name="lpFileName">INI文件名</param>  
            <returns>实际读取到的长度</returns>  
        </member>
        <member name="M:Azylee.Core.IOUtils.TxtUtils.IniTool.WritePrivateProfileSection(System.String,System.String,System.String)">
            <summary>  
            将指定的键值对写到指定的节点，如果已经存在则替换。  
            </summary>  
            <param name="lpAppName">节点，如果不存在此节点，则创建此节点</param>  
            <param name="lpString">Item键值对，多个用\0分隔,形如key1=value1\0key2=value2  
            <para>如果为string.Empty，则删除指定节点下的所有内容，保留节点</para>  
            <para>如果为null，则删除指定节点下的所有内容，并且删除该节点</para>  
            </param>  
            <param name="lpFileName">INI文件</param>  
            <returns>是否成功写入</returns>  
        </member>
        <member name="M:Azylee.Core.IOUtils.TxtUtils.IniTool.WritePrivateProfileString(System.String,System.String,System.String,System.String)">
            <summary>  
            将指定的键和值写到指定的节点，如果已经存在则替换  
            </summary>  
            <param name="lpAppName">节点名称</param>  
            <param name="lpKeyName">键名称。如果为null，则删除指定的节点及其所有的项目</param>  
            <param name="lpString">值内容。如果为null，则删除指定节点中指定的键。</param>  
            <param name="lpFileName">INI文件</param>  
            <returns>操作是否成功</returns>  
        </member>
        <member name="M:Azylee.Core.IOUtils.TxtUtils.IniTool.GetAllSectionNames(System.String)">
            <summary>  
            读取INI文件中指定INI文件中的所有节点名称(Section)  
            </summary>  
            <param name="iniFile">Ini文件</param>  
            <returns>所有节点,没有内容返回string[0]</returns>  
        </member>
        <member name="M:Azylee.Core.IOUtils.TxtUtils.IniTool.GetAllItems(System.String,System.String)">
            <summary>  
            获取INI文件中指定节点(Section)中的所有条目(key=value形式)  
            </summary>  
            <param name="iniFile">Ini文件</param>  
            <param name="section">节点名称</param>  
            <returns>指定节点中的所有项目,没有内容返回string[0]</returns>  
        </member>
        <member name="M:Azylee.Core.IOUtils.TxtUtils.IniTool.GetAllItemKeys(System.String,System.String)">
            <summary>  
            获取INI文件中指定节点(Section)中的所有条目的Key列表  
            </summary>  
            <param name="iniFile">Ini文件</param>  
            <param name="section">节点名称</param>  
            <returns>如果没有内容,反回string[0]</returns>  
        </member>
        <member name="M:Azylee.Core.IOUtils.TxtUtils.IniTool.WriteItems(System.String,System.String,System.String)">
            <summary>  
            在INI文件中，将指定的键值对写到指定的节点，如果已经存在则替换  
            </summary>  
            <param name="iniFile">INI文件</param>  
            <param name="section">节点，如果不存在此节点，则创建此节点</param>  
            <param name="items">键值对，多个用\0分隔,形如key1=value1\0key2=value2</param>  
            <returns></returns>  
        </member>
        <member name="M:Azylee.Core.IOUtils.TxtUtils.IniTool.DeleteKey(System.String,System.String,System.String)">
            <summary>  
            在INI文件中，删除指定节点中的指定的键。  
            </summary>  
            <param name="iniFile">INI文件</param>  
            <param name="section">节点</param>  
            <param name="key">键</param>  
            <returns>操作是否成功</returns>  
        </member>
        <member name="M:Azylee.Core.IOUtils.TxtUtils.IniTool.DeleteSection(System.String,System.String)">
            <summary>  
            在INI文件中，删除指定的节点。  
            </summary>  
            <param name="iniFile">INI文件</param>  
            <param name="section">节点</param>  
            <returns>操作是否成功</returns>  
        </member>
        <member name="M:Azylee.Core.IOUtils.TxtUtils.IniTool.EmptySection(System.String,System.String)">
            <summary>  
            在INI文件中，删除指定节点中的所有内容。  
            </summary>  
            <param name="iniFile">INI文件</param>  
            <param name="section">节点</param>  
            <returns>操作是否成功</returns>  
        </member>
        <member name="M:Azylee.Core.IOUtils.TxtUtils.IniTool.Test">
            <summary>
            测试
            </summary>
        </member>
        <member name="T:Azylee.Core.LogUtils.SimpleLogUtils.Log">
            <summary>
            Log 输出工具
            
            说明：
            1、Log.AllocConsole();开启控制台
            2、Log.FreeConsole();关闭控制台
            3、Log.i("information");输出消息
            </summary>
        </member>
        <member name="T:Azylee.Core.LogUtils.SimpleLogUtils.Log.LogEventDelegate">
            <summary>
            日志输出回调方法
            </summary>
            <param name="type">类型</param>
            <param name="msg">内容</param>
        </member>
        <member name="M:Azylee.Core.LogUtils.SimpleLogUtils.Log.#ctor(System.Boolean,Azylee.Core.LogUtils.SimpleLogUtils.LogLevel,Azylee.Core.LogUtils.SimpleLogUtils.LogLevel)">
            <summary>
            初始化 Log 工具（不建议使用）
            </summary>
            <param name="isWrite">是否写出日志</param>
            <param name="logLevel"></param>
            <param name="writeLevel"></param>
        </member>
        <member name="M:Azylee.Core.LogUtils.SimpleLogUtils.Log.#ctor(Azylee.Core.LogUtils.SimpleLogUtils.LogLevel,Azylee.Core.LogUtils.SimpleLogUtils.LogLevel,Azylee.Core.LogUtils.SimpleLogUtils.Log.LogEventDelegate)">
            <summary>
            初始化 Log 工具（建议）
            </summary>
            <param name="console">控制台输出级别</param>
            <param name="file">文件输出级别</param>
            <param name="action">日志输出回调</param>
        </member>
        <member name="M:Azylee.Core.LogUtils.SimpleLogUtils.Log.SetLogPath(System.String)">
            <summary>
            设置日志路径
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Azylee.Core.LogUtils.SimpleLogUtils.Log.SetCacheDays(System.Int32)">
            <summary>
            设置日志缓存天数（默认30天）
            </summary>
            <param name="days"></param>
        </member>
        <member name="M:Azylee.Core.LogUtils.SimpleLogUtils.Log.AllocConsole">
            <summary>
            启用系统控制台输出
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.LogUtils.SimpleLogUtils.Log.FreeConsole">
            <summary>
            关闭系统控制台
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.LogUtils.SimpleLogUtils.Log.GetColor(Azylee.Core.LogUtils.SimpleLogUtils.LogType)">
            <summary>
            获取输出颜色
            </summary>
            <param name="type">输出类型</param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.LogUtils.SimpleLogUtils.Log.WriteConsole(Azylee.Core.LogUtils.SimpleLogUtils.LogType,System.String)">
            <summary>
            写出到控制台
            </summary>
            <param name="type">类型</param>
            <param name="message">消息</param>
        </member>
        <member name="M:Azylee.Core.LogUtils.SimpleLogUtils.Log.WriteFile(Azylee.Core.LogUtils.SimpleLogUtils.LogModel)">
            <summary>
            写出到日志文件
            </summary>
            <param name="log"></param>
        </member>
        <member name="M:Azylee.Core.LogUtils.SimpleLogUtils.Log.Cleaner(Azylee.Core.LogUtils.SimpleLogUtils.LogType)">
            <summary>
            清理过多的日志文件
            </summary>
        </member>
        <member name="M:Azylee.Core.LogUtils.SimpleLogUtils.Log.v``1(``0)">
            <summary>
            输出 verbose (啰嗦信息)
            </summary>
            <param name="msg">消息</param>
        </member>
        <member name="M:Azylee.Core.LogUtils.SimpleLogUtils.Log.d``1(``0)">
            <summary>
            输出 Debug (调试信息)
            </summary>
            <param name="msg">消息</param>
        </member>
        <member name="M:Azylee.Core.LogUtils.SimpleLogUtils.Log.i``1(``0)">
            <summary>
            输出 Information (重要信息)
            </summary>
            <param name="msg">消息</param>
        </member>
        <member name="M:Azylee.Core.LogUtils.SimpleLogUtils.Log.w``1(``0)">
            <summary>
            输出 Warning (警告信息)
            </summary>
            <param name="msg">消息</param>
        </member>
        <member name="M:Azylee.Core.LogUtils.SimpleLogUtils.Log.e``1(``0)">
            <summary>
            输出 Error (错误信息)
            </summary>
            <param name="msg">消息</param>
        </member>
        <member name="M:Azylee.Core.LogUtils.SimpleLogUtils.Log.V``1(``0)">
            <summary>
            输出 verbose (啰嗦信息)
            </summary>
            <param name="msg">消息</param>
        </member>
        <member name="M:Azylee.Core.LogUtils.SimpleLogUtils.Log.D``1(``0)">
            <summary>
            输出 Debug (调试信息)
            </summary>
            <param name="msg">消息</param>
        </member>
        <member name="M:Azylee.Core.LogUtils.SimpleLogUtils.Log.I``1(``0)">
            <summary>
            输出 Information (重要信息)
            </summary>
            <param name="msg">消息</param>
        </member>
        <member name="M:Azylee.Core.LogUtils.SimpleLogUtils.Log.W``1(``0)">
            <summary>
            输出 Warning (警告信息)
            </summary>
            <param name="msg">消息</param>
        </member>
        <member name="M:Azylee.Core.LogUtils.SimpleLogUtils.Log.E``1(``0)">
            <summary>
            输出 Error (错误信息)
            </summary>
            <param name="msg">消息</param>
        </member>
        <member name="T:Azylee.Core.LogUtils.StatusLogUtils.StatusLogModel">
            <summary>
            运行状态
            </summary>
        </member>
        <member name="P:Azylee.Core.LogUtils.StatusLogUtils.StatusLogModel.Time">
            <summary>
            日期时间
            </summary>
        </member>
        <member name="P:Azylee.Core.LogUtils.StatusLogUtils.StatusLogModel.Long">
            <summary>
            统计时长（单位：秒）
            </summary>
        </member>
        <member name="P:Azylee.Core.LogUtils.StatusLogUtils.StatusLogModel.AFK">
            <summary>
            脱机时长（单位：秒）
            </summary>
        </member>
        <member name="P:Azylee.Core.LogUtils.StatusLogUtils.StatusLogModel.CpuPer">
            <summary>
            Cpu使用率
            </summary>
        </member>
        <member name="P:Azylee.Core.LogUtils.StatusLogUtils.StatusLogModel.RamFree">
            <summary>
            可用内存
            </summary>
        </member>
        <member name="P:Azylee.Core.LogUtils.StatusLogUtils.StatusLogModel.SysDriveFree">
            <summary>
            可用系统盘容量
            </summary>
        </member>
        <member name="P:Azylee.Core.LogUtils.StatusLogUtils.StatusLogModel.AppCpuPer">
            <summary>
            应用程序Cpu使用率
            </summary>
        </member>
        <member name="P:Azylee.Core.LogUtils.StatusLogUtils.StatusLogModel.AppRamUsed">
            <summary>
            应用程序占用内存
            </summary>
        </member>
        <member name="M:Azylee.Core.LogUtils.StatusLogUtils.StatusLog.WriteConfig">
            <summary>
            写出资源配置信息
            </summary>
        </member>
        <member name="M:Azylee.Core.LogUtils.StatusLogUtils.StatusLog.CollectStatus(Azylee.Core.LogUtils.StatusLogUtils.StatusLogModel@,System.Int32,System.Int64,System.TimeSpan)">
            <summary>
            收集数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.LogUtils.StatusLogUtils.StatusLog.WriteStatus(Azylee.Core.LogUtils.StatusLogUtils.StatusLogModel)">
            <summary>
            写出运行时状态信息
            </summary>
        </member>
        <member name="M:Azylee.Core.LogUtils.StatusLogUtils.StatusLog.Cleaner">
            <summary>
            清理过多的状态信息文件
            </summary>
        </member>
        <member name="T:Azylee.Core.ModelUtils.ResultModels.ResultData">
            <summary>
            用于方法执行返回结果
            </summary>
        </member>
        <member name="P:Azylee.Core.ModelUtils.ResultModels.ResultData.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:Azylee.Core.ModelUtils.ResultModels.ResultData.IsSuccess">
            <summary>
            成功与否
            </summary>
        </member>
        <member name="P:Azylee.Core.ModelUtils.ResultModels.ResultData.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="M:Azylee.Core.ModelUtils.ResultModels.ResultData.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Azylee.Core.ModelUtils.ResultModels.ResultData.#ctor(System.Boolean,System.String)">
            <summary>
            自定义构造函数
            </summary>
            <param name="isSucc"></param>
            <param name="desc"></param>
        </member>
        <member name="M:Azylee.Core.ModelUtils.ResultModels.ResultData.InitForError">
            <summary>
            初始化（默认为异常结果）
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.NetUtils.IPFormatter.CheckIp(System.String)">
            <summary>
            验证IP地址格式
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.NetUtils.MacFormatter.CheckMac(System.String)">
            <summary>
            验证MAC地址格式
            </summary>
            <param name="mac"></param>
            <returns></returns>
        </member>
        <member name="T:Azylee.Core.NetUtils.NetAddressUtils.DNSTool">
            <summary>
            DNS 工具类
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.NetAddressUtils.DNSTool.AliDNS">
            <summary>
            阿里DNS
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.NetAddressUtils.DNSTool.BaiduDNS">
            <summary>
            百度DNS
            </summary>
        </member>
        <member name="P:Azylee.Core.NetUtils.NetFlowService.NetProcessInfoList">
            <summary>
            程序联网信息列表
            </summary>
        </member>
        <member name="P:Azylee.Core.NetUtils.NetFlowService.NetFlow">
            <summary>
            网络流量计数器
            </summary>
        </member>
        <member name="M:Azylee.Core.NetUtils.NetFlowService.Start">
            <summary>
            开启网络流量监控
            </summary>
        </member>
        <member name="M:Azylee.Core.NetUtils.NetFlowService.Stop">
            <summary>
            关闭网络流量监控
            </summary>
        </member>
        <member name="M:Azylee.Core.NetUtils.NetFlowService.DataMonitorEvent(Azylee.Core.NetUtils.NetFlowTool)">
            <summary>
            系统性能计数器每秒统计事件
            </summary>
            <param name="n"></param>
        </member>
        <member name="M:Azylee.Core.NetUtils.NetFlowService.NewPacketEvent(Azylee.Core.NetUtils.NetPacketTool,Azylee.Core.NetUtils.Packet)">
            <summary>
            整理数据包到所属的进程
            </summary>
            <param name="tool"></param>
            <param name="packet"></param>
        </member>
        <member name="M:Azylee.Core.NetUtils.NetFlowService.GetConnection">
            <summary>
            获取所有网络连接并整理列表
            </summary>
        </member>
        <member name="M:Azylee.Core.NetUtils.NetFlowService.SetNetProcess">
            <summary>
            清空并重置当前所有程序的连接数
            </summary>
        </member>
        <member name="M:Azylee.Core.NetUtils.NetFlowService.SetNetProcessConnection(Azylee.Core.NetUtils.NetProcessTool.TcpRow)">
            <summary>
            整理TCP连接到所属的进程
            </summary>
            <param name="t"></param>
        </member>
        <member name="M:Azylee.Core.NetUtils.NetFlowService.SetNetProcessConnection(Azylee.Core.NetUtils.NetProcessTool.UdpRow)">
            <summary>
            整理UDP连接到所属的进程
            </summary>
            <param name="u"></param>
        </member>
        <member name="M:Azylee.Core.NetUtils.NetFlowService.CalcNetProcessInfo">
            <summary>
            整理计算程序网络流量
            </summary>
        </member>
        <member name="M:Azylee.Core.NetUtils.NetFlowService.CheckRestart">
            <summary>
            联网断网重启计划（应对断网或重连后网卡抓包报错造成的不准确）
            </summary>
        </member>
        <member name="P:Azylee.Core.NetUtils.NetFlowTool.UploadData">
            <summary>
            上行数据流量
            </summary>
        </member>
        <member name="P:Azylee.Core.NetUtils.NetFlowTool.UploadDataCount">
            <summary>
            上行数据总流量
            </summary>
        </member>
        <member name="P:Azylee.Core.NetUtils.NetFlowTool.DownloadData">
            <summary>
            下行数据流量
            </summary>
        </member>
        <member name="P:Azylee.Core.NetUtils.NetFlowTool.DownloadDataCount">
            <summary>
            下行数据总流量
            </summary>
        </member>
        <member name="M:Azylee.Core.NetUtils.NetFlowTool.Start(System.Int32)">
            <summary>
            启动流量监测
            </summary>
            <param name="interval"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.NetUtils.NetFlowTool.Restart">
            <summary>
            重启流量计数器
            </summary>
        </member>
        <member name="M:Azylee.Core.NetUtils.NetFlowTool.Reset">
            <summary>
            重置流量表数
            </summary>
        </member>
        <member name="M:Azylee.Core.NetUtils.NetFlowTool.Stop">
            <summary>
            停止流量监测
            </summary>
        </member>
        <member name="M:Azylee.Core.NetUtils.NetFlowTool.Finalize">
            <summary>
            终结器
            </summary>
        </member>
        <member name="T:Azylee.Core.NetUtils.NetPacketTool">
            <summary>
            A class that intercepts IP packets on a specific interface.
            </summary>
            <remarks>
            This class only works on Windows 2000 and higher.
            </remarks>
        </member>
        <member name="M:Azylee.Core.NetUtils.NetPacketTool.#ctor(System.Net.IPAddress)">
            <summary>
            Initializes a new instance of the PacketMonitor class.
            </summary>
            <param name="ip">The interface on which to listen for IP packets.</param>
            <exception cref="T:System.NotSupportedException">The operating system does not support intercepting packets.</exception>
        </member>
        <member name="M:Azylee.Core.NetUtils.NetPacketTool.Finalize">
            <summary>
            Cleans up the unmanaged resources.
            </summary>
        </member>
        <member name="M:Azylee.Core.NetUtils.NetPacketTool.Start">
            <summary>
            Starts listening on the specified interface.
            </summary>
            <exception cref="T:System.Net.Sockets.SocketException">An error occurs when trying to intercept IP packets.</exception>
        </member>
        <member name="M:Azylee.Core.NetUtils.NetPacketTool.Stop">
            <summary>
            Stops listening on the specified interface.
            </summary>
        </member>
        <member name="M:Azylee.Core.NetUtils.NetPacketTool.OnReceive(System.IAsyncResult)">
            <summary>
            Called when the socket intercepts an IP packet.
            </summary>
            <param name="ar">The asynchronous result.</param>
        </member>
        <member name="P:Azylee.Core.NetUtils.NetPacketTool.IP">
            <summary>
            The interface used to intercept IP packets.
            </summary>
            <value>An <see cref="T:System.Net.IPAddress"/> instance.</value>
        </member>
        <member name="P:Azylee.Core.NetUtils.NetPacketTool.Buffer">
            <summary>
            The buffer used to store incoming IP packets.
            </summary>
            <value>An array of bytes.</value>
        </member>
        <member name="M:Azylee.Core.NetUtils.NetPacketTool.OnNewPacket(Azylee.Core.NetUtils.Packet)">
            <summary>
            Raises an event that indicates a new packet has arrived.
            </summary>
            <param name="p">The arrived <see cref="T:Azylee.Core.NetUtils.Packet"/>.</param>
        </member>
        <member name="E:Azylee.Core.NetUtils.NetPacketTool.NewPacket">
            <summary>
            Holds all the listeners for the NewPacket event.
            </summary>
        </member>
        <member name="T:Azylee.Core.NetUtils.NewPacketEventHandler">
            <summary>
            Represents the method that will handle the NewPacket event.
            </summary>
            <param name="pm">The <see cref="!:PacketMonitor"/> that intercepted the <see cref="T:Azylee.Core.NetUtils.Packet"/>.</param>
            <param name="p">The newly arrived <see cref="T:Azylee.Core.NetUtils.Packet"/>.</param>
        </member>
        <member name="T:Azylee.Core.NetUtils.Precedence">
            <summary>
            The Network Control precedence designation is intended to be used within a network only. The actual use and control of that designation is up to each network. The Internetwork Control designation is intended for use by gateway control originators only. If the actual use of these precedence designations is of concern to a particular network, it is the responsibility of that network to control the access to, and use of, those precedence designations.
            </summary>
        </member>
        <member name="T:Azylee.Core.NetUtils.Delay">
            <summary>
            The use of the Delay, Throughput, and Reliability indications may increase the cost (in some sense) of the service. In many networks better performance for one of these parameters is coupled with worse performance on another.
            </summary>
        </member>
        <member name="T:Azylee.Core.NetUtils.Throughput">
            <summary>
            The use of the Delay, Throughput, and Reliability indications may increase the cost (in some sense) of the service. In many networks better performance for one of these parameters is coupled with worse performance on another.
            </summary>
        </member>
        <member name="T:Azylee.Core.NetUtils.Reliability">
            <summary>
            The use of the Delay, Throughput, and Reliability indications may increase the cost (in some sense) of the service. In many networks better performance for one of these parameters is coupled with worse performance on another.
            </summary>
        </member>
        <member name="T:Azylee.Core.NetUtils.Protocol">
            <summary>
            This field indicates the next level protocol used in the data portion of the internet datagram.
            </summary>
        </member>
        <member name="T:Azylee.Core.NetUtils.Packet">
            <summary>
            Represents an IP packet.
            </summary>
        </member>
        <member name="M:Azylee.Core.NetUtils.Packet.#ctor(System.Byte[])">
            <summary>
            Initializes a new version of the Packet class.
            </summary>
            <param name="raw">The raw bytes of the IP packet.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="raw"/> is a null reference (<b>Nothing</b> in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException"><paramref name="raw"/> represents an invalid IP packet.</exception>
            <remarks>The intercept time will be set to DateTime.Now.</remarks>
        </member>
        <member name="M:Azylee.Core.NetUtils.Packet.#ctor(System.Byte[],System.DateTime)">
            <summary>
            Initializes a new version of the Packet class.
            </summary>
            <param name="raw">The raw bytes of the IP packet.</param>
            <param name="time">The time when the IP packet was intercepted.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="raw"/> is a null reference (<b>Nothing</b> in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException"><paramref name="raw"/> represents an invalid IP packet.</exception>
        </member>
        <member name="P:Azylee.Core.NetUtils.Packet.Raw">
            <summary>
            Gets the raw bytes of the IP packet.
            </summary>
            <value>An array of bytes.</value>
        </member>
        <member name="P:Azylee.Core.NetUtils.Packet.Time">
            <summary>
            Gets the time when the IP packet was intercepted.
            </summary>
            <value>A <see cref="T:System.DateTime"/> value.</value>
        </member>
        <member name="P:Azylee.Core.NetUtils.Packet.Version">
            <summary>
            Gets the version of the IP protocol used.
            </summary>
            <value>A 32-bits signed integer.</value>
        </member>
        <member name="P:Azylee.Core.NetUtils.Packet.HeaderLength">
            <summary>
            Gets the length of the IP header [in bytes].
            </summary>
            <value>A 32-bits signed integer.</value>
        </member>
        <member name="P:Azylee.Core.NetUtils.Packet.Precedence">
            <summary>
            Gets the precedence parameter.
            </summary>
            <value>A <see cref="P:Azylee.Core.NetUtils.Packet.Precedence"/> instance.</value>
        </member>
        <member name="P:Azylee.Core.NetUtils.Packet.Delay">
            <summary>
            Gets the delay parameter.
            </summary>
            <value>A <see cref="P:Azylee.Core.NetUtils.Packet.Delay"/> instance.</value>
        </member>
        <member name="P:Azylee.Core.NetUtils.Packet.Throughput">
            <summary>
            Gets the throughput parameter.
            </summary>
            <value>A <see cref="P:Azylee.Core.NetUtils.Packet.Throughput"/> instance.</value>
        </member>
        <member name="P:Azylee.Core.NetUtils.Packet.Reliability">
            <summary>
            Gets the reliability parameter.
            </summary>
            <value>A <see cref="P:Azylee.Core.NetUtils.Packet.Reliability"/> instance.</value>
        </member>
        <member name="P:Azylee.Core.NetUtils.Packet.TotalLength">
            <summary>
            Gets the total length of the IP packet.
            </summary>
            <value>A 32-bits signed integer.</value>
        </member>
        <member name="P:Azylee.Core.NetUtils.Packet.Identification">
            <summary>
            Gets the identification number of the IP packet.
            </summary>
            <value>A 32-bits signed integer.</value>
        </member>
        <member name="P:Azylee.Core.NetUtils.Packet.TimeToLive">
            <summary>
            Gets the time-to-live [hop count] of the IP packet.
            </summary>
            <value>A 32-bits signed integer.</value>
        </member>
        <member name="P:Azylee.Core.NetUtils.Packet.Protocol">
            <summary>
            Gets the protocol of the IP packet.
            </summary>
            <value>A <see cref="P:Azylee.Core.NetUtils.Packet.Protocol"/> instance.</value>
        </member>
        <member name="P:Azylee.Core.NetUtils.Packet.Checksum">
            <summary>
            Gets the checksum of the IP packet.
            </summary>
            <value>An array of two bytes.</value>
        </member>
        <member name="P:Azylee.Core.NetUtils.Packet.SourceAddress">
            <summary>
            Gets the source address of the IP packet.
            </summary>
            <value>An <see cref="T:System.Net.IPAddress"/> instance.</value>
        </member>
        <member name="P:Azylee.Core.NetUtils.Packet.DestinationAddress">
            <summary>
            Gets the destination address of the IP packet.
            </summary>
            <value>An <see cref="T:System.Net.IPAddress"/> instance.</value>
        </member>
        <member name="P:Azylee.Core.NetUtils.Packet.SourcePort">
            <summary>
            Gets the source port of the packet.
            </summary>
            <value>A 32-bits signed integer.</value>
            <remarks>
            This property will only return meaningful data if the IP packet encapsulates either a TCP or a UDP packet.
            If the IP address encapsulates a packet of another protocol, the returned source port will be set to minus one.
            </remarks>
        </member>
        <member name="P:Azylee.Core.NetUtils.Packet.DestinationPort">
            <summary>
            Gets the destination port of the packet.
            </summary>
            <value>A 32-bits signed integer.</value>
            <remarks>
            This property will only return meaningful data if the IP packet encapsulates either a TCP or a UDP packet.
            If the IP address encapsulates a packet of another protocol, the returned destination port will be set to minus one.
            </remarks>
        </member>
        <member name="P:Azylee.Core.NetUtils.Packet.Source">
            <summary>
            Gets a string representation of the source.
            </summary>
            <value>An <see cref="T:System.String"/> instance.</value>
            <remarks>
            If the encapsulated packet is a TCP or UDP packet, the returned string will consist of the IP address and the port number.
            If the IP packet does not encapsulate a TCP or UDP packet, the returned string will consist of the IP address.
            </remarks>
        </member>
        <member name="P:Azylee.Core.NetUtils.Packet.Destination">
            <summary>
            Gets a string representation of the destination.
            </summary>
            <value>An <see cref="T:System.String"/> instance.</value>
            <remarks>
            If the encapsulated packet is a TCP or UDP packet, the returned string will consist of the IP address and the port number.
            If the IP packet does not encapsulate a TCP or UDP packet, the returned string will consist of the IP address.
            </remarks>
        </member>
        <member name="M:Azylee.Core.NetUtils.Packet.ToString">
            <summary>
            Returns a string representation of the Packet 
            </summary>
            <returns>An instance of the <see cref="T:System.String"/> class.</returns>
        </member>
        <member name="M:Azylee.Core.NetUtils.Packet.ToString(System.Boolean)">
            <summary>
            Returns a string representation of the Packet 
            </summary>
            <param name="raw"><b>true</b> if the returned string should ony contain the raw bytes, <b>false</b> if the returned string should also contain a hexadecimal representation.</param>
            <returns>An instance of the <see cref="T:System.String"/> class.</returns>
        </member>
        <member name="M:Azylee.Core.NetUtils.NetProcessTool.GetTcps">
            <summary>
            获取本机所有TCP连接
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.NetUtils.NetProcessTool.GetUdps">
            <summary>
            获取本机所有UDP连接
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.NetUtils.NetProcessTool.GetPidByPort(System.Int32)">
            <summary>
            根据端口号获取进程ID
            </summary>
            <param name="port"></param>
            <returns></returns>
        </member>
        <member name="T:Azylee.Core.NetUtils.NetcardControlTool">
            <summary>
            网卡设备操作工具
            </summary>
        </member>
        <member name="M:Azylee.Core.NetUtils.NetcardControlTool.GetList">
            <summary>
            使用WMI获取网卡列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.NetUtils.NetcardControlTool.GetNetWorkByGuid(System.Guid)">
            <summary>
            获取设备对象（XP无设备ID，请勿使用此方法）
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.NetUtils.NetcardControlTool.GetNetWorkByConnectId(System.String)">
            <summary>
            获取设备对象
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.NetUtils.NetcardControlTool.Enable(System.Management.ManagementObject)">
            <summary>
            启用设备（不支持XP系统）
            </summary>
            <param name="network"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.NetUtils.NetcardControlTool.Disable(System.Management.ManagementObject)">
            <summary>
            禁用设备（不支持XP系统）
            </summary>
            <param name="network"></param>
            <returns></returns>
        </member>
        <member name="T:Azylee.Core.NetUtils.PingTool">
            <summary>
            Ping 工具
            </summary>
        </member>
        <member name="M:Azylee.Core.NetUtils.PingTool.Ping(System.String)">
            <summary>
            Ping 指定 IP 地址
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.NetUtils.PingTool.Internet">
            <summary>
            判断是否连接互联网
            </summary>
            <returns></returns>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan">
            <summary>
            Defines the Native Wifi API through P/Invoke interop.
            </summary>
            <remarks>
            This class is intended for internal use. Use the <see cref="T:Azylee.Core.NetUtils.WifiManUtils.WlanClient"/> class instead.
            </remarks>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanIntfOpcode">
            <summary>
            Defines various opcodes used to set and query parameters for an interface.
            </summary>
            <remarks>
            Corresponds to the native <c>WLAN_INTF_OPCODE</c> type.
            </remarks>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanIntfOpcode.AutoconfEnabled">
            <summary>
            Opcode used to set or query whether auto config is enabled.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanIntfOpcode.BackgroundScanEnabled">
            <summary>
            Opcode used to set or query whether background scan is enabled.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanIntfOpcode.MediaStreamingMode">
            <summary>
            Opcode used to set or query the media streaming mode of the driver.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanIntfOpcode.RadioState">
            <summary>
            Opcode used to set or query the radio state.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanIntfOpcode.BssType">
            <summary>
            Opcode used to set or query the BSS type of the interface.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanIntfOpcode.InterfaceState">
            <summary>
            Opcode used to query the state of the interface.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanIntfOpcode.CurrentConnection">
            <summary>
            Opcode used to query information about the current connection of the interface.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanIntfOpcode.ChannelNumber">
            <summary>
            Opcose used to query the current channel on which the wireless interface is operating.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanIntfOpcode.SupportedInfrastructureAuthCipherPairs">
            <summary>
            Opcode used to query the supported auth/cipher pairs for infrastructure mode.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanIntfOpcode.SupportedAdhocAuthCipherPairs">
            <summary>
            Opcode used to query the supported auth/cipher pairs for ad hoc mode.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanIntfOpcode.SupportedCountryOrRegionStringList">
            <summary>
            Opcode used to query the list of supported country or region strings.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanIntfOpcode.CurrentOperationMode">
            <summary>
            Opcode used to set or query the current operation mode of the wireless interface.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanIntfOpcode.Statistics">
            <summary>
            Opcode used to query driver statistics.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanIntfOpcode.RSSI">
            <summary>
            Opcode used to query the received signal strength.
            </summary>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanOpcodeValueType">
            <summary>
            Specifies the origin of automatic configuration (auto config) settings.
            </summary>
            <remarks>
            Corresponds to the native <c>WLAN_OPCODE_VALUE_TYPE</c> type.
            </remarks>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanOpcodeValueType.QueryOnly">
            <summary>
            The auto config settings were queried, but the origin of the settings was not determined.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanOpcodeValueType.SetByGroupPolicy">
            <summary>
            The auto config settings were set by group policy.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanOpcodeValueType.SetByUser">
            <summary>
            The auto config settings were set by the user.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanOpcodeValueType.Invalid">
            <summary>
            The auto config settings are invalid.
            </summary>
        </member>
        <member name="M:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanScan(System.IntPtr,System.Guid,System.IntPtr,System.IntPtr,System.IntPtr)">
            <param name="pDot11Ssid">Not supported on Windows XP SP2: must be a <c>null</c> reference.</param>
            <param name="pIeData">Not supported on Windows XP SP2: must be a <c>null</c> reference.</param>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanGetAvailableNetworkFlags">
            <summary>
            Defines flags passed to <see cref="M:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanGetAvailableNetworkList(System.IntPtr,System.Guid,Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanGetAvailableNetworkFlags,System.IntPtr,System.IntPtr@)"/>.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanGetAvailableNetworkFlags.IncludeAllAdhocProfiles">
            <summary>
            Include all ad-hoc network profiles in the available network list, including profiles that are not visible.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanGetAvailableNetworkFlags.IncludeAllManualHiddenProfiles">
            <summary>
            Include all hidden network profiles in the available network list, including profiles that are not visible.
            </summary>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAvailableNetworkListHeader">
            <summary>
            The header of an array of information about available networks.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAvailableNetworkListHeader.numberOfItems">
            <summary>
            Contains the number of <see cref="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAvailableNetwork"/> items following the header.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAvailableNetworkListHeader.index">
            <summary>
            The index of the current item. The index of the first item is 0.
            </summary>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAvailableNetworkFlags">
            <summary>
            Defines the flags which specify characteristics of an available network.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAvailableNetworkFlags.Connected">
            <summary>
            This network is currently connected.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAvailableNetworkFlags.HasProfile">
            <summary>
            There is a profile for this network.
            </summary>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAvailableNetwork">
            <summary>
            Contains information about an available wireless network.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAvailableNetwork.profileName">
            <summary>
            Contains the profile name associated with the network.
            If the network doesn't have a profile, this member will be empty.
            If multiple profiles are associated with the network, there will be multiple entries with the same SSID in the visible network list. Profile names are case-sensitive.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAvailableNetwork.dot11Ssid">
            <summary>
            Contains the SSID of the visible wireless network.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAvailableNetwork.dot11BssType">
            <summary>
            Specifies whether the network is an infrastructure or an ad-hoc one.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAvailableNetwork.numberOfBssids">
            <summary>
            Indicates the number of BSSIDs in the network.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAvailableNetwork.networkConnectable">
            <summary>
            Indicates whether the network is connectable.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAvailableNetwork.wlanNotConnectableReason">
            <summary>
            Indicates why a network cannot be connected to. This member is only valid when <see cref="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAvailableNetwork.networkConnectable"/> is <c>false</c>.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAvailableNetwork.numberOfPhyTypes">
            <summary>
            The number of PHY types supported on available networks.
            The maximum value of this field is 8. If more than 8 PHY types are supported, <see cref="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAvailableNetwork.morePhyTypes"/> must be set to <c>true</c>.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAvailableNetwork.dot11PhyTypes">
            <summary>
            Contains an array of <see cref="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11PhyType"/> values that represent the PHY types supported by the available networks.
            When <see cref="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAvailableNetwork.numberOfPhyTypes"/> is greater than 8, this array contains only the first 8 PHY types.
            </summary>
        </member>
        <member name="P:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAvailableNetwork.Dot11PhyTypes">
            <summary>
            Gets the <see cref="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11PhyType"/> values that represent the PHY types supported by the available networks.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAvailableNetwork.morePhyTypes">
            <summary>
            Specifies if there are more than 8 PHY types supported.
            When this member is set to <c>true</c>, an application must call <see cref="M:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.GetNetworkBssList"/> to get the complete list of PHY types.
            <see cref="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanBssEntry.phyId"/> contains the PHY type for an entry.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAvailableNetwork.wlanSignalQuality">
            <summary>
            A percentage value that represents the signal quality of the network.
            This field contains a value between 0 and 100.
            A value of 0 implies an actual RSSI signal strength of -100 dbm.
            A value of 100 implies an actual RSSI signal strength of -50 dbm.
            You can calculate the RSSI signal strength value for values between 1 and 99 using linear interpolation.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAvailableNetwork.securityEnabled">
            <summary>
            Indicates whether security is enabled on the network.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAvailableNetwork.dot11DefaultAuthAlgorithm">
            <summary>
            Indicates the default authentication algorithm used to join this network for the first time.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAvailableNetwork.dot11DefaultCipherAlgorithm">
            <summary>
            Indicates the default cipher algorithm to be used when joining this network.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAvailableNetwork.flags">
            <summary>
            Contains various flags specifying characteristics of the available network.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAvailableNetwork.reserved">
            <summary>
            Reserved for future use. Must be set to NULL.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanProfileFlags.AllUser">
            <remarks>
            The only option available on Windows XP SP2.
            </remarks>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAccess">
            <summary>
            Defines the access mask of an all-user profile.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAccess.ReadAccess">
            <summary>
            The user can view profile permissions.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAccess.ExecuteAccess">
            <summary>
            The user has read access, and the user can also connect to and disconnect from a network using the profile.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAccess.WriteAccess">
            <summary>
            The user has execute access and the user can also modify and delete permissions associated with a profile.
            </summary>
        </member>
        <member name="M:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanGetProfile(System.IntPtr,System.Guid,System.String,System.IntPtr,System.IntPtr@,Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanProfileFlags@,Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAccess@)">
            <param name="flags">Not supported on Windows XP SP2: must be a <c>null</c> reference.</param>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanNotificationSource">
            <summary>
            Defines the mask which specifies where a notification comes from.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanNotificationSource.All">
            <summary>
            All notifications, including those generated by the 802.1X module.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanNotificationSource.ACM">
            <summary>
            Notifications generated by the auto configuration module.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanNotificationSource.MSM">
            <summary>
            Notifications generated by MSM.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanNotificationSource.Security">
            <summary>
            Notifications generated by the security module.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanNotificationSource.IHV">
            <summary>
            Notifications generated by independent hardware vendors (IHV).
            </summary>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanNotificationCodeAcm">
            <summary>
            Defines the types of ACM (<see cref="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanNotificationSource.ACM"/>) notifications.
            </summary>
            <remarks>
            The enumeration identifiers correspond to the native <c>wlan_notification_acm_</c> identifiers.
            On Windows XP SP2, only the <c>ConnectionComplete</c> and <c>Disconnected</c> notifications are available.
            </remarks>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanNotificationCodeMsm">
            <summary>
            Defines the types of an MSM (<see cref="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanNotificationSource.MSM"/>) notifications.
            </summary>
            <remarks>
            The enumeration identifiers correspond to the native <c>wlan_notification_msm_</c> identifiers.
            </remarks>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanNotificationData">
            <summary>
            Contains information provided when registering for WLAN notifications.
            </summary>
            <remarks>
            Corresponds to the native <c>WLAN_NOTIFICATION_DATA</c> type.
            </remarks>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanNotificationData.notificationSource">
            <summary>
            Specifies where the notification comes from.
            </summary>
            <remarks>
            On Windows XP SP2, this field must be set to <see cref="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanNotificationSource.None"/>, <see cref="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanNotificationSource.All"/> or <see cref="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanNotificationSource.ACM"/>.
            </remarks>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanNotificationData.notificationCode">
            <summary>
            Indicates the type of notification. The value of this field indicates what type of associated data will be present in <see cref="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanNotificationData.dataPtr"/>.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanNotificationData.interfaceGuid">
            <summary>
            Indicates which interface the notification is for.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanNotificationData.dataSize">
            <summary>
            Specifies the size of <see cref="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanNotificationData.dataPtr"/>, in bytes.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanNotificationData.dataPtr">
            <summary>
            Pointer to additional data needed for the notification, as indicated by <see cref="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanNotificationData.notificationCode"/>.
            </summary>
        </member>
        <member name="P:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanNotificationData.NotificationCode">
            <summary>
            Gets the notification code (in the correct enumeration type) according to the notification source.
            </summary>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanNotificationCallbackDelegate">
            <summary>
            Defines the callback function which accepts WLAN notifications.
            </summary>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionFlags">
            <summary>
            Defines flags which affect connecting to a WLAN network.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionFlags.HiddenNetwork">
            <summary>
            Connect to the destination network even if the destination is a hidden network. A hidden network does not broadcast its SSID. Do not use this flag if the destination network is an ad-hoc network.
            <para>If the profile specified by <see cref="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionParameters.profile"/> is not <c>null</c>, then this flag is ignored and the nonBroadcast profile element determines whether to connect to a hidden network.</para>
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionFlags.AdhocJoinOnly">
            <summary>
            Do not form an ad-hoc network. Only join an ad-hoc network if the network already exists. Do not use this flag if the destination network is an infrastructure network.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionFlags.IgnorePrivacyBit">
            <summary>
            Ignore the privacy bit when connecting to the network. Ignoring the privacy bit has the effect of ignoring whether packets are encryption and ignoring the method of encryption used. Only use this flag when connecting to an infrastructure network using a temporary profile.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionFlags.EapolPassthrough">
            <summary>
            Exempt EAPOL traffic from encryption and decryption. This flag is used when an application must send EAPOL traffic over an infrastructure network that uses Open authentication and WEP encryption. This flag must not be used to connect to networks that require 802.1X authentication. This flag is only valid when <see cref="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionParameters.wlanConnectionMode"/> is set to <see cref="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionMode.TemporaryProfile"/>. Avoid using this flag whenever possible.
            </summary>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionParameters">
            <summary>
            Specifies the parameters used when using the <see cref="M:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnect(System.IntPtr,System.Guid,Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionParameters@,System.IntPtr)"/> function.
            </summary>
            <remarks>
            Corresponds to the native <c>WLAN_CONNECTION_PARAMETERS</c> type.
            </remarks>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionParameters.wlanConnectionMode">
            <summary>
            Specifies the mode of connection.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionParameters.profile">
            <summary>
            Specifies the profile being used for the connection.
            The contents of the field depend on the <see cref="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionParameters.wlanConnectionMode"/>:
            <list type="table">
            <listheader>
            <term>Value of <see cref="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionParameters.wlanConnectionMode"/></term>
            <description>Contents of the profile string</description>
            </listheader>
            <item>
            <term><see cref="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionMode.Profile"/></term>
            <description>The name of the profile used for the connection.</description>
            </item>
            <item>
            <term><see cref="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionMode.TemporaryProfile"/></term>
            <description>The XML representation of the profile used for the connection.</description>
            </item>
            <item>
            <term><see cref="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionMode.DiscoverySecure"/>, <see cref="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionMode.DiscoveryUnsecure"/> or <see cref="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionMode.Auto"/></term>
            <description><c>null</c></description>
            </item>
            </list>
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionParameters.dot11SsidPtr">
            <summary>
            Pointer to a <see cref="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11Ssid"/> structure that specifies the SSID of the network to connect to.
            This field is optional. When set to <c>null</c>, all SSIDs in the profile will be tried.
            This field must not be <c>null</c> if <see cref="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionParameters.wlanConnectionMode"/> is set to <see cref="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionMode.DiscoverySecure"/> or <see cref="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionMode.DiscoveryUnsecure"/>.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionParameters.desiredBssidListPtr">
            <summary>
            Pointer to a <c>Dot11BssidList</c> structure that contains the list of basic service set (BSS) identifiers desired for the connection.
            </summary>
            <remarks>
            On Windows XP SP2, must be set to <c>null</c>.
            </remarks>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionParameters.dot11BssType">
            <summary>
            A <see cref="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11BssType"/> value that indicates the BSS type of the network. If a profile is provided, this BSS type must be the same as the one in the profile.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionParameters.flags">
            <summary>
            Specifies ocnnection parameters.
            </summary>
            <remarks>
            On Windows XP SP2, must be set to 0.
            </remarks>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAdhocNetworkState">
            <summary>
            The connection state of an ad hoc network.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAdhocNetworkState.Formed">
            <summary>
            The ad hoc network has been formed, but no client or host is connected to the network.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAdhocNetworkState.Connected">
            <summary>
            A client or host is connected to the ad hoc network.
            </summary>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanBssEntry">
            <summary>
            Contains information about a basic service set (BSS).
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanBssEntry.dot11Ssid">
            <summary>
            Contains the SSID of the access point (AP) associated with the BSS.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanBssEntry.phyId">
            <summary>
            The identifier of the PHY on which the AP is operating.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanBssEntry.dot11Bssid">
            <summary>
            Contains the BSS identifier.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanBssEntry.dot11BssType">
            <summary>
            Specifies whether the network is infrastructure or ad hoc.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanBssEntry.rssi">
            <summary>
            The received signal strength in dBm.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanBssEntry.linkQuality">
            <summary>
            The link quality reported by the driver. Ranges from 0-100.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanBssEntry.inRegDomain">
            <summary>
            If 802.11d is not implemented, the network interface card (NIC) must set this field to TRUE. If 802.11d is implemented (but not necessarily enabled), the NIC must set this field to TRUE if the BSS operation complies with the configured regulatory domain.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanBssEntry.beaconPeriod">
            <summary>
            Contains the beacon interval value from the beacon packet or probe response.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanBssEntry.timestamp">
            <summary>
            The timestamp from the beacon packet or probe response.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanBssEntry.hostTimestamp">
            <summary>
            The host timestamp value when the beacon or probe response is received.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanBssEntry.capabilityInformation">
            <summary>
            The capability value from the beacon packet or probe response.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanBssEntry.chCenterFrequency">
            <summary>
            The frequency of the center channel, in kHz.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanBssEntry.wlanRateSet">
            <summary>
            Contains the set of data transfer rates supported by the BSS.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanBssEntry.ieOffset">
            <summary>
            The offset of the information element (IE) data blob.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanBssEntry.ieSize">
            <summary>
            The size of the IE data blob, in bytes.
            </summary>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanRateSet">
            <summary>
            Contains the set of supported data rates.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanRateSet.rateSetLength">
            <summary>
            The length, in bytes, of <see cref="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanRateSet.rateSet"/>.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanRateSet.rateSet">
            <summary>
            An array of supported data transfer rates.
            </summary>
        </member>
        <member name="P:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanRateSet.Rates">
            <summary>
            Gets an array of supported data transfer rates.
            If the rate is a basic rate, the first bit of the rate value is set to 1.
            A basic rate is the data transfer rate that all stations in a basic service set (BSS) can use to receive frames from the wireless medium.
            </summary>
        </member>
        <member name="M:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanRateSet.GetRateInMbps(System.Int32)">
            <summary>
            Calculates the data transfer rate in mbit/s for a supported rate.
            </summary>
            <param name="rateIndex">The WLAN rate index (0-based).</param>
            <returns>The data transfer rate in mbit/s.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <param name="rateIndex"/> does not specify an existing rate.</exception>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanException">
            <summary>
            Represents an error occuring during WLAN operations which indicate their failure via a <see cref="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanReasonCode"/>.
            </summary>
        </member>
        <member name="P:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanException.ReasonCode">
            <summary>
            Gets the WLAN reason code.
            </summary>
            <value>The WLAN reason code.</value>
        </member>
        <member name="P:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanException.Message">
            <summary>
            Gets a message that describes the reason code.
            </summary>
            <value></value>
            <returns>The error message that explains the reason for the exception, or an empty string("").</returns>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanReasonCode">
            <summary>
            Defines reasons for a failure of a WLAN operation.
            </summary>
            <remarks>
            Corresponds to the native reason code identifiers (<c>WLAN_REASON_CODE_xxx</c> identifiers).
            </remarks>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionNotificationData">
            <summary>
            Contains information about connection related notifications.
            </summary>
            <remarks>
            Corresponds to the native <c>WLAN_CONNECTION_NOTIFICATION_DATA</c> type.
            </remarks>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionNotificationData.wlanConnectionMode">
            <remarks>
            On Windows XP SP 2, only <see cref="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionMode.Profile"/> is supported.
            </remarks>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionNotificationData.profileName">
            <summary>
            The name of the profile used for the connection. Profile names are case-sensitive.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionNotificationData.dot11Ssid">
            <summary>
            The SSID of the association.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionNotificationData.dot11BssType">
            <summary>
            The BSS network type.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionNotificationData.securityEnabled">
            <summary>
            Indicates whether security is enabled for this connection.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionNotificationData.wlanReasonCode">
            <summary>
            Indicates the reason for an operation failure.
            This field has a value of <see cref="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanReasonCode.Success"/> for all connection-related notifications except <see cref="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanNotificationCodeAcm.ConnectionComplete"/>.
            If the connection fails, this field indicates the reason for the failure.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionNotificationData.profileXml">
            <summary>
            This field contains the XML presentation of the profile used for discovery, if the connection succeeds.
            </summary>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanInterfaceState">
            <summary>
            Indicates the state of an interface.
            </summary>
            <remarks>
            Corresponds to the native <c>WLAN_INTERFACE_STATE</c> type.
            </remarks>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanInterfaceState.NotReady">
            <summary>
            The interface is not ready to operate.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanInterfaceState.Connected">
            <summary>
            The interface is connected to a network.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanInterfaceState.AdHocNetworkFormed">
            <summary>
            The interface is the first node in an ad hoc network. No peer has connected.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanInterfaceState.Disconnecting">
            <summary>
            The interface is disconnecting from the current network.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanInterfaceState.Disconnected">
            <summary>
            The interface is not connected to any network.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanInterfaceState.Associating">
            <summary>
            The interface is attempting to associate with a network.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanInterfaceState.Discovering">
            <summary>
            Auto configuration is discovering the settings for the network.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanInterfaceState.Authenticating">
            <summary>
            The interface is in the process of authenticating.
            </summary>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11Ssid">
            <summary>
            Contains the SSID of an interface.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11Ssid.SSIDLength">
            <summary>
            The length, in bytes, of the <see cref="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11Ssid.SSID"/> array.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11Ssid.SSID">
            <summary>
            The SSID.
            </summary>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11PhyType">
            <summary>
            Defines an 802.11 PHY and media type.
            </summary>
            <remarks>
            Corresponds to the native <c>DOT11_PHY_TYPE</c> type.
            </remarks>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11PhyType.Unknown">
            <summary>
            Specifies an unknown or uninitialized PHY type.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11PhyType.Any">
            <summary>
            Specifies any PHY type.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11PhyType.FHSS">
            <summary>
            Specifies a frequency-hopping spread-spectrum (FHSS) PHY. Bluetooth devices can use FHSS or an adaptation of FHSS.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11PhyType.DSSS">
            <summary>
            Specifies a direct sequence spread spectrum (DSSS) PHY.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11PhyType.IrBaseband">
            <summary>
            Specifies an infrared (IR) baseband PHY.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11PhyType.OFDM">
            <summary>
            Specifies an orthogonal frequency division multiplexing (OFDM) PHY. 802.11a devices can use OFDM.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11PhyType.HRDSSS">
            <summary>
            Specifies a high-rate DSSS (HRDSSS) PHY.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11PhyType.ERP">
            <summary>
            Specifies an extended rate PHY (ERP). 802.11g devices can use ERP.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11PhyType.IHV_Start">
            <summary>
            Specifies the start of the range that is used to define PHY types that are developed by an independent hardware vendor (IHV).
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11PhyType.IHV_End">
            <summary>
            Specifies the end of the range that is used to define PHY types that are developed by an independent hardware vendor (IHV).
            </summary>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11BssType">
            <summary>
            Defines a basic service set (BSS) network type.
            </summary>
            <remarks>
            Corresponds to the native <c>DOT11_BSS_TYPE</c> type.
            </remarks>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11BssType.Infrastructure">
            <summary>
            Specifies an infrastructure BSS network.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11BssType.Independent">
            <summary>
            Specifies an independent BSS (IBSS) network.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11BssType.Any">
            <summary>
            Specifies either infrastructure or IBSS network.
            </summary>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAssociationAttributes">
            <summary>
            Contains association attributes for a connection
            </summary>
            <remarks>
            Corresponds to the native <c>WLAN_ASSOCIATION_ATTRIBUTES</c> type.
            </remarks>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAssociationAttributes.dot11Ssid">
            <summary>
            The SSID of the association.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAssociationAttributes.dot11BssType">
            <summary>
            Specifies whether the network is infrastructure or ad hoc.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAssociationAttributes.dot11Bssid">
            <summary>
            The BSSID of the association.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAssociationAttributes.dot11PhyType">
            <summary>
            The physical type of the association.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAssociationAttributes.dot11PhyIndex">
            <summary>
            The position of the <see cref="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11PhyType"/> value in the structure containing the list of PHY types.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAssociationAttributes.wlanSignalQuality">
            <summary>
            A percentage value that represents the signal quality of the network.
            This field contains a value between 0 and 100.
            A value of 0 implies an actual RSSI signal strength of -100 dbm.
            A value of 100 implies an actual RSSI signal strength of -50 dbm.
            You can calculate the RSSI signal strength value for values between 1 and 99 using linear interpolation.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAssociationAttributes.rxRate">
            <summary>
            The receiving rate of the association.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAssociationAttributes.txRate">
            <summary>
            The transmission rate of the association.
            </summary>
        </member>
        <member name="P:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanAssociationAttributes.Dot11Bssid">
            <summary>
            Gets the BSSID of the associated access point.
            </summary>
            <value>The BSSID.</value>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionMode">
            <summary>
            Defines the mode of connection.
            </summary>
            <remarks>
            Corresponds to the native <c>WLAN_CONNECTION_MODE</c> type.
            </remarks>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionMode.Profile">
            <summary>
            A profile will be used to make the connection.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionMode.TemporaryProfile">
            <summary>
            A temporary profile will be used to make the connection.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionMode.DiscoverySecure">
            <summary>
            Secure discovery will be used to make the connection.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionMode.DiscoveryUnsecure">
            <summary>
            Unsecure discovery will be used to make the connection.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionMode.Auto">
            <summary>
            A connection will be made automatically, generally using a persistent profile.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionMode.Invalid">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11AuthAlgorithm">
            <summary>
            Defines a wireless LAN authentication algorithm.
            </summary>
            <remarks>
            Corresponds to the native <c>DOT11_AUTH_ALGORITHM</c> type.
            </remarks>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11AuthAlgorithm.IEEE80211_Open">
            <summary>
            Specifies an IEEE 802.11 Open System authentication algorithm.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11AuthAlgorithm.IEEE80211_SharedKey">
            <summary>
            Specifies an 802.11 Shared Key authentication algorithm that requires the use of a pre-shared Wired Equivalent Privacy (WEP) key for the 802.11 authentication.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11AuthAlgorithm.WPA">
            <summary>
            Specifies a Wi-Fi Protected Access (WPA) algorithm. IEEE 802.1X port authentication is performed by the supplicant, authenticator, and authentication server. Cipher keys are dynamically derived through the authentication process.
            <para>This algorithm is valid only for BSS types of <see cref="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11BssType.Infrastructure"/>.</para>
            <para>When the WPA algorithm is enabled, the 802.11 station will associate only with an access point whose beacon or probe responses contain the authentication suite of type 1 (802.1X) within the WPA information element (IE).</para>
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11AuthAlgorithm.WPA_PSK">
            <summary>
            Specifies a WPA algorithm that uses preshared keys (PSK). IEEE 802.1X port authentication is performed by the supplicant and authenticator. Cipher keys are dynamically derived through a preshared key that is used on both the supplicant and authenticator.
            <para>This algorithm is valid only for BSS types of <see cref="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11BssType.Infrastructure"/>.</para>
            <para>When the WPA PSK algorithm is enabled, the 802.11 station will associate only with an access point whose beacon or probe responses contain the authentication suite of type 2 (preshared key) within the WPA IE.</para>
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11AuthAlgorithm.WPA_None">
            <summary>
            This value is not supported.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11AuthAlgorithm.RSNA">
            <summary>
            Specifies an 802.11i Robust Security Network Association (RSNA) algorithm. WPA2 is one such algorithm. IEEE 802.1X port authentication is performed by the supplicant, authenticator, and authentication server. Cipher keys are dynamically derived through the authentication process.
            <para>This algorithm is valid only for BSS types of <see cref="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11BssType.Infrastructure"/>.</para>
            <para>When the RSNA algorithm is enabled, the 802.11 station will associate only with an access point whose beacon or probe responses contain the authentication suite of type 1 (802.1X) within the RSN IE.</para>
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11AuthAlgorithm.RSNA_PSK">
            <summary>
            Specifies an 802.11i RSNA algorithm that uses PSK. IEEE 802.1X port authentication is performed by the supplicant and authenticator. Cipher keys are dynamically derived through a preshared key that is used on both the supplicant and authenticator.
            <para>This algorithm is valid only for BSS types of <see cref="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11BssType.Infrastructure"/>.</para>
            <para>When the RSNA PSK algorithm is enabled, the 802.11 station will associate only with an access point whose beacon or probe responses contain the authentication suite of type 2(preshared key) within the RSN IE.</para>
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11AuthAlgorithm.IHV_Start">
            <summary>
            Indicates the start of the range that specifies proprietary authentication algorithms that are developed by an IHV.
            </summary>
            <remarks>
            This enumerator is valid only when the miniport driver is operating in Extensible Station (ExtSTA) mode.
            </remarks>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11AuthAlgorithm.IHV_End">
            <summary>
            Indicates the end of the range that specifies proprietary authentication algorithms that are developed by an IHV.
            </summary>
            <remarks>
            This enumerator is valid only when the miniport driver is operating in Extensible Station (ExtSTA) mode.
            </remarks>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11CipherAlgorithm">
            <summary>
            Defines a cipher algorithm for data encryption and decryption.
            </summary>
            <remarks>
            Corresponds to the native <c>DOT11_CIPHER_ALGORITHM</c> type.
            </remarks>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11CipherAlgorithm.None">
            <summary>
            Specifies that no cipher algorithm is enabled or supported.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11CipherAlgorithm.WEP40">
            <summary>
            Specifies a Wired Equivalent Privacy (WEP) algorithm, which is the RC4-based algorithm that is specified in the 802.11-1999 standard. This enumerator specifies the WEP cipher algorithm with a 40-bit cipher key.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11CipherAlgorithm.TKIP">
            <summary>
            Specifies a Temporal Key Integrity Protocol (TKIP) algorithm, which is the RC4-based cipher suite that is based on the algorithms that are defined in the WPA specification and IEEE 802.11i-2004 standard. This cipher also uses the Michael Message Integrity Code (MIC) algorithm for forgery protection.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11CipherAlgorithm.CCMP">
            <summary>
            Specifies an AES-CCMP algorithm, as specified in the IEEE 802.11i-2004 standard and RFC 3610. Advanced Encryption Standard (AES) is the encryption algorithm defined in FIPS PUB 197.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11CipherAlgorithm.WEP104">
            <summary>
            Specifies a WEP cipher algorithm with a 104-bit cipher key.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11CipherAlgorithm.WPA_UseGroup">
            <summary>
            Specifies a Robust Security Network (RSN) Use Group Key cipher suite. For more information about the Use Group Key cipher suite, refer to Clause 7.3.2.9.1 of the IEEE 802.11i-2004 standard.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11CipherAlgorithm.RSN_UseGroup">
            <summary>
            Specifies a Wifi Protected Access (WPA) Use Group Key cipher suite. For more information about the Use Group Key cipher suite, refer to Clause 7.3.2.9.1 of the IEEE 802.11i-2004 standard.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11CipherAlgorithm.WEP">
            <summary>
            Specifies a WEP cipher algorithm with a cipher key of any length.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11CipherAlgorithm.IHV_Start">
            <summary>
            Specifies the start of the range that is used to define proprietary cipher algorithms that are developed by an independent hardware vendor (IHV).
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11CipherAlgorithm.IHV_End">
            <summary>
            Specifies the end of the range that is used to define proprietary cipher algorithms that are developed by an IHV.
            </summary>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanSecurityAttributes">
            <summary>
            Defines the security attributes for a wireless connection.
            </summary>
            <remarks>
            Corresponds to the native <c>WLAN_SECURITY_ATTRIBUTES</c> type.
            </remarks>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanSecurityAttributes.securityEnabled">
            <summary>
            Indicates whether security is enabled for this connection.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanSecurityAttributes.dot11AuthAlgorithm">
            <summary>
            The authentication algorithm.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanSecurityAttributes.dot11CipherAlgorithm">
            <summary>
            The cipher algorithm.
            </summary>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionAttributes">
            <summary>
            Defines the attributes of a wireless connection.
            </summary>
            <remarks>
            Corresponds to the native <c>WLAN_CONNECTION_ATTRIBUTES</c> type.
            </remarks>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionAttributes.isState">
            <summary>
            The state of the interface.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionAttributes.wlanConnectionMode">
            <summary>
            The mode of the connection.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionAttributes.profileName">
            <summary>
            The name of the profile used for the connection. Profile names are case-sensitive.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionAttributes.wlanAssociationAttributes">
            <summary>
            The attributes of the association.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionAttributes.wlanSecurityAttributes">
            <summary>
            The security attributes of the connection.
            </summary>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanInterfaceInfo">
            <summary>
            Contains information about a LAN interface.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanInterfaceInfo.interfaceGuid">
            <summary>
            The GUID of the interface.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanInterfaceInfo.interfaceDescription">
            <summary>
            The description of the interface.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanInterfaceInfo.isState">
            <summary>
            The current state of the interface.
            </summary>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanInterfaceInfoListHeader">
            <summary>
            The header of the list returned by <see cref="M:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanEnumInterfaces(System.IntPtr,System.IntPtr,System.IntPtr@)"/>.
            </summary>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanProfileInfoListHeader">
            <summary>
            The header of the list returned by <see cref="M:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanGetProfileList(System.IntPtr,System.Guid,System.IntPtr,System.IntPtr@)"/>.
            </summary>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanProfileInfo">
            <summary>
            Contains basic information about a profile.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanProfileInfo.profileName">
            <summary>
            The name of the profile. This value may be the name of a domain if the profile is for provisioning. Profile names are case-sensitive.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanProfileInfo.profileFlags">
            <summary>
            Profile flags.
            </summary>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11OperationMode">
            <summary>
            Flags that specifiy the miniport driver's current operation mode.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11OperationMode.ExtensibleStation">
            <summary>
            Specifies that the miniport driver supports the Extensible Station (ExtSTA) operation mode.
            </summary>
        </member>
        <member name="F:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11OperationMode.NetworkMonitor">
            <summary>
            Specifies that the miniport driver supports the Network Monitor (NetMon) operation mode.
            </summary>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11RadioState">
            <summary>
            Defines the radio state of a wireless connection.
            </summary>
            <remarks>
            Corresponds to the native <c>DOT11_RADIO_STATE</c> enumeration.
            </remarks>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanPhyRadioState">
            <summary>
            Defines the radio state attributes for a wireless connection.
            </summary>
            <remarks>
            Corresponds to the native <c>WLAN_PHY_RADIO_STATE</c> structure.
            </remarks>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanRadioState">
            <summary>
            Defines the radio state attributes for a wireless connection.
            </summary>
            <remarks>
            Corresponds to the native <c>WLAN_RADIO_STATE</c> type.
            </remarks>
        </member>
        <member name="M:Azylee.Core.NetUtils.WifiManUtils.Wlan.ThrowIfError(System.Int32)">
            <summary>
            Helper method to wrap calls to Native WiFi API methods.
            If the method falls, throws an exception containing the error code.
            </summary>
            <param name="win32ErrorCode">The error code.</param>
            <exception cref="T:System.ComponentModel.Win32Exception">Thrown if the error code indicates anything but success.</exception>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.WlanClient">
            <summary>
            Represents a client to the Zeroconf (Native Wifi) service.
            </summary>
            <remarks>
            This class is the entrypoint to Native Wifi management. To manage WiFi settings, create an instance
            of this class.
            </remarks>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface">
            <summary>
            Represents a Wifi network interface.
            </summary>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.WlanNotificationEventHandler">
            <summary>
            Represents a method that will handle <see cref="E:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.WlanNotification"/> events.
            </summary>
            <param name="notifyData">The notification data.</param>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.WlanConnectionNotificationEventHandler">
            <summary>
            Represents a method that will handle <see cref="E:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.WlanConnectionNotification"/> events.
            </summary>
            <param name="notifyData">The notification data.</param>
            <param name="connNotifyData">The notification data.</param>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.WlanReasonNotificationEventHandler">
            <summary>
            Represents a method that will handle <see cref="E:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.WlanReasonNotification"/> events.
            </summary>
            <param name="notifyData">The notification data.</param>
            <param name="reasonCode">The reason code.</param>
        </member>
        <member name="E:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.WlanNotification">
            <summary>
            Occurs when an event of any kind occurs on a WLAN interface.
            </summary>
        </member>
        <member name="E:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.WlanConnectionNotification">
            <summary>
            Occurs when a WLAN interface changes connection state.
            </summary>
        </member>
        <member name="E:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.WlanReasonNotification">
            <summary>
            Occurs when a WLAN operation fails due to some reason.
            </summary>
        </member>
        <member name="M:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.SetInterfaceInt(Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanIntfOpcode,System.Int32)">
            <summary>
            Sets a parameter of the interface whose data type is <see cref="T:System.Int32"/>.
            </summary>
            <param name="opCode">The opcode of the parameter.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.GetInterfaceInt(Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanIntfOpcode)">
            <summary>
            Gets a parameter of the interface whose data type is <see cref="T:System.Int32"/>.
            </summary>
            <param name="opCode">The opcode of the parameter.</param>
            <returns>The integer value.</returns>
        </member>
        <member name="P:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.Autoconf">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface"/> is automatically configured.
            </summary>
            <value><c>true</c> if "autoconf" is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.BssType">
            <summary>
            Gets or sets the BSS type for the indicated interface.
            </summary>
            <value>The type of the BSS.</value>
        </member>
        <member name="P:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.InterfaceState">
            <summary>
            Gets the state of the interface.
            </summary>
            <value>The state of the interface.</value>
        </member>
        <member name="P:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.Channel">
            <summary>
            Gets the channel.
            </summary>
            <value>The channel.</value>
            <remarks>Not supported on Windows XP SP2.</remarks>
        </member>
        <member name="P:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.RSSI">
            <summary>
            Gets the RSSI.
            </summary>
            <value>The RSSI.</value>
            <remarks>Not supported on Windows XP SP2.</remarks>
        </member>
        <member name="P:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.RadioState">
            <summary>
            Gets the radio state.
            </summary>
            <value>The radio state.</value>
            <remarks>Not supported on Windows XP.</remarks>
        </member>
        <member name="P:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.CurrentOperationMode">
            <summary>
            Gets the current operation mode.
            </summary>
            <value>The current operation mode.</value>
            <remarks>Not supported on Windows XP SP2.</remarks>
        </member>
        <member name="P:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.CurrentConnection">
            <summary>
            Gets the attributes of the current connection.
            </summary>
            <value>The current connection attributes.</value>
            <exception cref="T:System.ComponentModel.Win32Exception">An exception with code 0x0000139F (The group or resource is not in the correct state to perform the requested operation.) will be thrown if the interface is not connected to a network.</exception>
        </member>
        <member name="M:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.Scan">
            <summary>
            Requests a scan for available networks.
            </summary>
            <remarks>
            The method returns immediately. Progress is reported through the <see cref="E:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.WlanNotification"/> event.
            </remarks>
        </member>
        <member name="M:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.ConvertAvailableNetworkListPtr(System.IntPtr)">
            <summary>
            Converts a pointer to a available networks list (header + entries) to an array of available network entries.
            </summary>
            <param name="availNetListPtr">A pointer to an available networks list's header.</param>
            <returns>An array of available network entries.</returns>
        </member>
        <member name="M:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.GetAvailableNetworkList(Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanGetAvailableNetworkFlags)">
            <summary>
            Retrieves the list of available networks.
            </summary>
            <param name="flags">Controls the type of networks returned.</param>
            <returns>A list of the available networks.</returns>
        </member>
        <member name="M:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.ConvertBssListPtr(System.IntPtr)">
            <summary>
            Converts a pointer to a BSS list (header + entries) to an array of BSS entries.
            </summary>
            <param name="bssListPtr">A pointer to a BSS list's header.</param>
            <returns>An array of BSS entries.</returns>
        </member>
        <member name="M:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.GetNetworkBssList">
            <summary>
            Retrieves the basic service sets (BSS) list of all available networks.
            </summary>
        </member>
        <member name="M:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.GetNetworkBssList(Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11Ssid,Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11BssType,System.Boolean)">
            <summary>
            Retrieves the basic service sets (BSS) list of the specified network.
            </summary>
            <param name="ssid">Specifies the SSID of the network from which the BSS list is requested.</param>
            <param name="bssType">Indicates the BSS type of the network.</param>
            <param name="securityEnabled">Indicates whether security is enabled on the network.</param>
        </member>
        <member name="M:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.Connect(Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionParameters)">
            <summary>
            Connects to a network defined by a connection parameters structure.
            </summary>
            <param name="connectionParams">The connection paramters.</param>
        </member>
        <member name="M:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.Connect(Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionMode,Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11BssType,System.String)">
            <summary>
            Requests a connection (association) to the specified wireless network.
            </summary>
            <remarks>
            The method returns immediately. Progress is reported through the <see cref="E:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.WlanNotification"/> event.
            </remarks>
        </member>
        <member name="M:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.ConnectSynchronously(Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionMode,Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11BssType,System.String,System.Int32)">
            <summary>
            Connects (associates) to the specified wireless network, returning either on a success to connect
            or a failure.
            </summary>
            <param name="connectionMode"></param>
            <param name="bssType"></param>
            <param name="profile"></param>
            <param name="connectTimeout"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.Connect(Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionMode,Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11BssType,Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11Ssid,Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanConnectionFlags)">
            <summary>
            Connects to the specified wireless network.
            </summary>
            <remarks>
            The method returns immediately. Progress is reported through the <see cref="E:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.WlanNotification"/> event.
            </remarks>
        </member>
        <member name="M:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.DeleteProfile(System.String)">
            <summary>
            Deletes a profile.
            </summary>
            <param name="profileName">
            The name of the profile to be deleted. Profile names are case-sensitive.
            On Windows XP SP2, the supplied name must match the profile name derived automatically from the SSID of the network. For an infrastructure network profile, the SSID must be supplied for the profile name. For an ad hoc network profile, the supplied name must be the SSID of the ad hoc network followed by <c>-adhoc</c>.
            </param>
        </member>
        <member name="M:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.SetProfile(Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanProfileFlags,System.String,System.Boolean)">
            <summary>
            Sets the profile.
            </summary>
            <param name="flags">The flags to set on the profile.</param>
            <param name="profileXml">The XML representation of the profile. On Windows XP SP 2, special care should be taken to adhere to its limitations.</param>
            <param name="overwrite">If a profile by the given name already exists, then specifies whether to overwrite it (if <c>true</c>) or return an error (if <c>false</c>).</param>
            <returns>The resulting code indicating a success or the reason why the profile wasn't valid.</returns>
        </member>
        <member name="M:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.GetProfileXml(System.String)">
            <summary>
            Gets the profile's XML specification.
            </summary>
            <param name="profileName">The name of the profile.</param>
            <returns>The XML document.</returns>
        </member>
        <member name="M:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.GetProfiles">
            <summary>
            Gets the information of all profiles on this interface.
            </summary>
            <returns>The profiles information.</returns>
        </member>
        <member name="M:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.EnqueueEvent(System.Object)">
            <summary>
            Enqueues a notification event to be processed serially.
            </summary>
        </member>
        <member name="P:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.NetworkInterface">
            <summary>
            Gets the network interface of this wireless interface.
            </summary>
            <remarks>
            The network interface allows querying of generic network properties such as the interface's IP address.
            </remarks>
        </member>
        <member name="P:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.InterfaceGuid">
            <summary>
            The GUID of the interface (same content as the <see cref="P:System.Net.NetworkInformation.NetworkInterface.Id"/> value).
            </summary>
        </member>
        <member name="P:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.InterfaceDescription">
            <summary>
            The description of the interface.
            This is a user-immutable string containing the vendor and model name of the adapter.
            </summary>
        </member>
        <member name="P:Azylee.Core.NetUtils.WifiManUtils.WlanClient.WlanInterface.InterfaceName">
            <summary>
            The friendly name given to the interface by the user (e.g. "Local Area Network Connection").
            </summary>
        </member>
        <member name="M:Azylee.Core.NetUtils.WifiManUtils.WlanClient.#ctor">
            <summary>
            Creates a new instance of a Native Wifi service client.
            </summary>
        </member>
        <member name="M:Azylee.Core.NetUtils.WifiManUtils.WlanClient.Close">
            <summary>
            Closes the handle.
            </summary>
        </member>
        <member name="P:Azylee.Core.NetUtils.WifiManUtils.WlanClient.Interfaces">
            <summary>
            Gets the WLAN interfaces.
            </summary>
            <value>The WLAN interfaces.</value>
        </member>
        <member name="M:Azylee.Core.NetUtils.WifiManUtils.WlanClient.GetStringForReasonCode(Azylee.Core.NetUtils.WifiManUtils.Wlan.WlanReasonCode)">
            <summary>
            Gets a string that describes a specified reason code.
            </summary>
            <param name="reasonCode">The reason code.</param>
            <returns>The string.</returns>
        </member>
        <member name="T:Azylee.Core.NetUtils.WifiManUtils.WlanTool">
            <summary>
            Wlan连接工具
            </summary>
        </member>
        <member name="M:Azylee.Core.NetUtils.WifiManUtils.WlanTool.Connect(System.String,System.String)">
            <summary>
            连接到指定Wifi网络
            </summary>
            <param name="name">wifi名称</param>
            <param name="key">wifi密码</param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.NetUtils.WifiManUtils.WlanTool.IsConnect(System.String)">
            <summary>
            是否连接到某wifi
            </summary>
            <param name="name">wifi名称</param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.NetUtils.WifiManUtils.WlanTool.StringToHex(System.String)">
            <summary>  
            字符串转Hex  
            </summary>  
            <param name="s"></param>  
            <returns></returns>  
        </member>
        <member name="M:Azylee.Core.NetUtils.WifiManUtils.WlanTool.GetStringForSSID(Azylee.Core.NetUtils.WifiManUtils.Wlan.Dot11Ssid)">
            <summary>
            Converts a 802.11 SSID to a string.
            </summary>
        </member>
        <member name="T:Azylee.Core.ProcessUtils.ProcessStarter">
            <summary>
            进程启动工具
            </summary>
        </member>
        <member name="M:Azylee.Core.ProcessUtils.ProcessStarter.NewProcess(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            创建进程
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.ProcessUtils.ProcessStarter.ConvertToSecureString(System.String)">
            <summary>
            带权限运行的密码保密文本转换
            </summary>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.ProcessUtils.ProcessStarter.Execute(System.Diagnostics.Process,System.Action{System.String})">
            <summary>
            开始运行
            </summary>
            <param name="process"></param>
            <param name="output"></param>
        </member>
        <member name="M:Azylee.Core.ProcessUtils.ProcessTool.IsExists(System.String)">
            <summary>
            判断进程是否存在
            </summary>
            <param name="name">进程名</param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.ProcessUtils.ProcessTool.Start(System.String,System.String)">
            <summary>
            启动程序
            </summary>
            <param name="file">文件路径</param>
            <param name="args">启动参数</param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.ProcessUtils.ProcessTool.StartCustom(System.String,System.String)">
            <summary>
            启动进程（定制启动配置）
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Azylee.Core.ProcessUtils.ProcessTool.Kill(System.String)">
            <summary>
            停止进程
            </summary>
            <param name="name">进程名</param>
        </member>
        <member name="M:Azylee.Core.ProcessUtils.ProcessTool.KillCurrent">
            <summary>
            停止当前进程
            </summary>
        </member>
        <member name="M:Azylee.Core.ProcessUtils.ProcessTool.Kills(System.String[])">
            <summary>
            停止多个进程
            </summary>
            <param name="names"></param>
        </member>
        <member name="M:Azylee.Core.ProcessUtils.ProcessTool.Kills(System.String,System.String,System.Int32)">
            <summary>
            停止超时进程
            </summary>
            <param name="name">进程名（不含后缀）</param>
            <param name="file">文件路径（为空则不验证）</param>
            <param name="second">超时时间（单位：秒）</param>
        </member>
        <member name="M:Azylee.Core.ProcessUtils.ProcessTool.Kill(System.Diagnostics.Process,System.Int32)">
            <summary>
            强制关闭超时进程
            </summary>
            <param name="process"></param>
            <param name="second"></param>
        </member>
        <member name="M:Azylee.Core.ProcessUtils.ProcessTool.SleepKill(System.Diagnostics.Process,System.Int16)">
            <summary>
            延时并关闭进程
            </summary>
            <param name="process"></param>
            <param name="second"></param>
        </member>
        <member name="M:Azylee.Core.ProcessUtils.ProcessTool.GetInstanceNameById(System.Int32)">
            <summary>
            根据PID获取InstanceName（不要用于性能计数器，#1..实例名会自动改变）
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="F:Azylee.Core.ProxyUtils.SimpleProxyUtils.SimpleProxyTool`1.Operation">
            <summary>
            记录方法前置操作和后置操作
            </summary>
        </member>
        <member name="M:Azylee.Core.ProxyUtils.SimpleProxyUtils.SimpleProxyTool`1.Add(Azylee.Core.ProxyUtils.SimpleProxyUtils.RunMode,System.String,System.Action)">
            <summary>
            添加操作
            </summary>
            <param name="type">执行类型</param>
            <param name="method">方法名</param>
            <param name="action">动作</param>
        </member>
        <member name="M:Azylee.Core.ProxyUtils.SimpleProxyUtils.SimpleProxyTool`1.Invoke``1(System.String,System.Object[])">
            <summary>
            执行方法
            </summary>
            <typeparam name="R">返回值</typeparam>
            <param name="methodName">方法名</param>
            <param name="objs">参数</param>
            <returns></returns>
        </member>
        <member name="F:Azylee.Core.ReflectionUtils.AttributeUtils.AttributeTool.Cache">
            <summary>  
            Cache Data  
            </summary>  
        </member>
        <member name="M:Azylee.Core.ReflectionUtils.AttributeUtils.AttributeTool.GetCustomAttributeValue``1(System.Type,System.Func{``0,System.String})">
            <summary>  
            获取CustomAttribute Value  
            </summary>  
            <typeparam name="T">Attribute的子类型</typeparam>  
            <param name="sourceType">头部标有CustomAttribute类的类型</param>  
            <param name="attributeValueAction">取Attribute具体哪个属性值的匿名函数</param>  
            <returns>返回Attribute的值，没有则返回null</returns>  
        </member>
        <member name="M:Azylee.Core.ReflectionUtils.AttributeUtils.AttributeTool.GetCustomAttributeValue``1(System.Type,System.Func{``0,System.String},System.String)">
            <summary>  
            获取CustomAttribute Value  
            </summary>  
            <typeparam name="T">Attribute的子类型</typeparam>  
            <param name="sourceType">头部标有CustomAttribute类的类型</param>  
            <param name="attributeValueAction">取Attribute具体哪个属性值的匿名函数</param>  
            <param name="name">field name或property name</param>  
            <returns>返回Attribute的值，没有则返回null</returns>  
        </member>
        <member name="M:Azylee.Core.ReflectionUtils.AttributeUtils.AttributeTool.CacheAttributeValue``1(System.Type,System.Func{``0,System.String},System.String)">
            <summary>  
            缓存Attribute Value  
            </summary>  
        </member>
        <member name="M:Azylee.Core.ReflectionUtils.AttributeUtils.AttributeTool.BuildKey(System.Type,System.String)">
            <summary>  
            缓存Collection Name Key  
            </summary>  
        </member>
        <member name="F:Azylee.Core.ReflectionUtils.AttributeUtils.CustomAttributeHelper.Cache">
            <summary>  
            Cache Data  
            </summary>  
        </member>
        <member name="M:Azylee.Core.ReflectionUtils.AttributeUtils.CustomAttributeHelper.GetCustomAttributeValue``1(System.Type,System.Func{``0,System.String})">
            <summary>  
            获取CustomAttribute Value  
            </summary>  
            <typeparam name="T">Attribute的子类型</typeparam>  
            <param name="sourceType">头部标有CustomAttribute类的类型</param>  
            <param name="attributeValueAction">取Attribute具体哪个属性值的匿名函数</param>  
            <returns>返回Attribute的值，没有则返回null</returns>  
        </member>
        <member name="M:Azylee.Core.ReflectionUtils.AttributeUtils.CustomAttributeHelper.GetCustomAttributeValue``1(System.Type,System.Func{``0,System.String},System.String)">
            <summary>  
            获取CustomAttribute Value  
            </summary>  
            <typeparam name="T">Attribute的子类型</typeparam>  
            <param name="sourceType">头部标有CustomAttribute类的类型</param>  
            <param name="attributeValueAction">取Attribute具体哪个属性值的匿名函数</param>  
            <param name="name">field name或property name</param>  
            <returns>返回Attribute的值，没有则返回null</returns>  
        </member>
        <member name="M:Azylee.Core.ReflectionUtils.AttributeUtils.CustomAttributeHelper.CacheAttributeValue``1(System.Type,System.Func{``0,System.String},System.String)">
            <summary>  
            缓存Attribute Value  
            </summary>  
        </member>
        <member name="M:Azylee.Core.ReflectionUtils.AttributeUtils.CustomAttributeHelper.BuildKey(System.Type,System.String)">
            <summary>  
            缓存Collection Name Key  
            </summary>  
        </member>
        <member name="P:Azylee.Core.TaskUtils.TaskSupport.IsRun">
            <summary>
            通过运行时间判断是否运行
            </summary>
        </member>
        <member name="P:Azylee.Core.TaskUtils.TaskSupport.IsStart">
            <summary>
            已启动
            </summary>
        </member>
        <member name="F:Azylee.Core.TaskUtils.TaskSupport._IsStart">
            <summary>
            已启动（Protect）
            </summary>
        </member>
        <member name="F:Azylee.Core.TaskUtils.TaskSupport.CT">
            <summary>
            取消标志
            </summary>
        </member>
        <member name="F:Azylee.Core.TaskUtils.TaskSupport.Interval">
            <summary>
            任务循环间隔
            </summary>
        </member>
        <member name="M:Azylee.Core.TaskUtils.TaskSupport.SetInterval(System.Int32)">
            <summary>
            设置任务间隔（0为不循环任务）
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.TaskUtils.TaskSupport.Start">
            <summary>
            启动服务任务
            </summary>
        </member>
        <member name="M:Azylee.Core.TaskUtils.TaskSupport.BeforeTODO">
            <summary>
            提前干点啥
            </summary>
        </member>
        <member name="M:Azylee.Core.TaskUtils.TaskSupport.TODO">
            <summary>
            干点啥
            </summary>
        </member>
        <member name="M:Azylee.Core.TaskUtils.TaskSupport.AfterTODO">
            <summary>
            完事儿干点啥
            </summary>
        </member>
        <member name="M:Azylee.Core.TaskUtils.TaskSupport.Stop">
            <summary>
            停止服务任务
            </summary>
        </member>
        <member name="M:Azylee.Core.ThreadUtils.SleepUtils.Sleep.S(System.Int16)">
            <summary>
            Sleep（单位：秒）
            </summary>
        </member>
        <member name="M:Azylee.Core.ThreadUtils.SleepUtils.Sleep.M(System.Int16)">
            <summary>
            Sleep（单位：分）
            </summary>
        </member>
        <member name="M:Azylee.Core.ThreadUtils.SleepUtils.SleepTool.Zs(System.Int16)">
            <summary>
            Sleep（单位：秒）
            </summary>
        </member>
        <member name="M:Azylee.Core.ThreadUtils.SleepUtils.SleepTool.Zm(System.Int16)">
            <summary>
            Sleep（单位：分）
            </summary>
        </member>
        <member name="T:Azylee.Core.WindowsUtils.AdminUtils.AdminTool">
            <summary>
            Administrator 工具
            </summary>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.AdminUtils.AdminTool.CheckPasswords(System.Collections.Generic.List{System.String})">
            <summary>
            检查 Administrator 密码是否正确
            </summary>
            <param name="pwds"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.AdminUtils.AdminTool.CheckPassword(System.String)">
            <summary>
            检查 Administrator 密码是否正确
            </summary>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="T:Azylee.Core.WindowsUtils.AdminUtils.WindowsAccountModel">
            <summary>
            Windows 系统账号信息
            </summary>
        </member>
        <member name="P:Azylee.Core.WindowsUtils.AdminUtils.WindowsAccountModel.Domain">
            <summary>
            域
            </summary>
        </member>
        <member name="P:Azylee.Core.WindowsUtils.AdminUtils.WindowsAccountModel.UserName">
            <summary>
            账号
            </summary>
        </member>
        <member name="P:Azylee.Core.WindowsUtils.AdminUtils.WindowsAccountModel.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.AdminUtils.WindowsAccountModel.#ctor(System.String,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="domain"></param>
            <param name="username"></param>
            <param name="password"></param>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.AdminUtils.WindowsAccountModel.Check">
            <summary>
            验证账号密码正确性
            </summary>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.AdminUtils.WindowsAccountModel.CheckAdmin(System.String)">
            <summary>
            验证账号密码为管理员账号
            </summary>
            <returns></returns>
        </member>
        <member name="T:Azylee.Core.WindowsUtils.APIUtils.ApplicationAPI">
            <summary>
            应用程序API
            </summary>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.APIUtils.ApplicationAPI.Raise(System.Diagnostics.Process,System.Boolean)">
            <summary>
            唤起进程窗口（搭配 AppUnique.IsUnique() 食用更佳）
            -测试无法唤起隐藏窗口，仅能唤起常规窗口
            </summary>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.APIUtils.ExplorerAPI.Open(System.String)">
            <summary>
            打开文件夹
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.APIUtils.ExplorerAPI.OpenFile(System.String)">
            <summary>
            打开并定位到文件
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.APIUtils.ExplorerAPI.ILFree(System.IntPtr)">
            <summary>
            打开路径并定位文件...
            对于@"h:\Bleacher Report - Hardaway with the safe call ??.mp4"
            这样的，explorer.exe /select,d:xxx不认，用API整它
            </summary>
            <param name="filePath">文件绝对路径</param>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.APIUtils.PermissionAPI.AllocateAndInitializeSid(System.Byte[],System.Byte,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr@)">
            <summary>
            The AllocateAndInitializeSid function allocates and initializes a security identifier (SID) with up to eight subauthorities.
            </summary>
            <param name="pIdentifierAuthority">Pointer to a SID_IDENTIFIER_AUTHORITY structure, giving the top-level identifier authority value to set in the SID.</param>
            <param name="nSubAuthorityCount">Specifies the number of subauthorities to place in the SID. This parameter also identifies how many of the subauthority parameters have meaningful values. This parameter must contain a value from 1 to 8.</param>
            <param name="dwSubAuthority0">Subauthority value to place in the SID.</param>
            <param name="dwSubAuthority1">Subauthority value to place in the SID.</param>
            <param name="dwSubAuthority2">Subauthority value to place in the SID.</param>
            <param name="dwSubAuthority3">Subauthority value to place in the SID.</param>
            <param name="dwSubAuthority4">Subauthority value to place in the SID.</param>
            <param name="dwSubAuthority5">Subauthority value to place in the SID.</param>
            <param name="dwSubAuthority6">Subauthority value to place in the SID.</param>
            <param name="dwSubAuthority7">Subauthority value to place in the SID.</param>
            <param name="pSid">Pointer to a variable that receives the pointer to the allocated and initialized SID structure.</param>
            <returns>If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call GetLastError.</returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.APIUtils.PermissionAPI.CheckTokenMembership(System.IntPtr,System.IntPtr,System.Int32@)">
            <summary>
            The CheckTokenMembership function determines whether a specified SID is enabled in an access token.
            </summary>
            <param name="TokenHandle">Handle to an access token. The handle must have TOKEN_QUERY access to the token. The token must be an impersonation token.</param>
            <param name="SidToCheck">Pointer to a SID structure. The CheckTokenMembership function checks for the presence of this SID in the user and group SIDs of the access token.</param>
            <param name="IsMember">Pointer to a variable that receives the results of the check. If the SID is present and has the SE_GROUP_ENABLED attribute, IsMember returns TRUE; otherwise, it returns FALSE.</param>
            <returns>If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call GetLastError.</returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.APIUtils.PermissionAPI.FreeSid(System.IntPtr)">
            <summary>
            The FreeSid function frees a security identifier (SID) previously allocated by using the AllocateAndInitializeSid function.
            </summary>
            <param name="pSid">Pointer to the SID structure to free.</param>
            <returns>This function does not return a value.</returns>
        </member>
        <member name="T:Azylee.Core.WindowsUtils.APIUtils.ScreenAPI">
            <summary>
            屏幕分辨率接口
            </summary>
        </member>
        <member name="P:Azylee.Core.WindowsUtils.APIUtils.ScreenAPI.WorkingArea">
            <summary>
            获取屏幕分辨率当前物理大小
            </summary>
        </member>
        <member name="P:Azylee.Core.WindowsUtils.APIUtils.ScreenAPI.DpiX">
            <summary>
            当前系统DPI_X 大小 一般为96
            </summary>
        </member>
        <member name="P:Azylee.Core.WindowsUtils.APIUtils.ScreenAPI.DpiY">
            <summary>
            当前系统DPI_Y 大小 一般为96
            </summary>
        </member>
        <member name="P:Azylee.Core.WindowsUtils.APIUtils.ScreenAPI.DESKTOP">
            <summary>
            获取真实设置的桌面分辨率大小
            </summary>
        </member>
        <member name="P:Azylee.Core.WindowsUtils.APIUtils.ScreenAPI.ScaleX">
            <summary>
            获取宽度缩放百分比
            </summary>
        </member>
        <member name="P:Azylee.Core.WindowsUtils.APIUtils.ScreenAPI.ScaleY">
            <summary>
            获取高度缩放百分比
            </summary>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.APIUtils.SystemSleepAPI.PreventSleep(System.Boolean)">
            <summary>
            阻止系统休眠
            </summary>
            <param name="screen">阻止息屏</param>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.APIUtils.SystemSleepAPI.ResotreSleep">
            <summary>
            恢复系统休眠和息屏
            </summary>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.APIUtils.SystemSleepAPI.ResetSleepTimer(System.Boolean)">
            <summary>
            重置系统休眠计时器
            </summary>
            <param name="screen">阻止息屏</param>
        </member>
        <member name="T:Azylee.Core.WindowsUtils.APIUtils.WallpaperUtils.WallpaperTool">
            <summary>
            系统桌面壁纸工具类
            </summary>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.APIUtils.WallpaperUtils.WallpaperTool.Get">
            <summary>
            获取当前桌面壁纸路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.APIUtils.WallpaperUtils.WallpaperTool.Set(System.String)">
            <summary>
            设置当前桌面背景
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.APIUtils.WindowsAPI.GetLastInputTime">
            <summary>
            获取计算机无操作时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.APIUtils.WindowsAPI.GetForegroundWindow">
            <summary>
            获取当前窗口句柄
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.APIUtils.WindowsAPI.ShowWindow(System.IntPtr,System.Int32)">
            <summary>
            显示窗口
            </summary>
            <param name="hwnd"></param>
            <param name="nCmdShow">0关闭 1正常显示 2最小化 3最大化</param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.APIUtils.WindowsAPI.GetWindowRect(System.IntPtr,Azylee.Core.WindowsUtils.APIUtils.WindowsAPI.RECT@)">
            <summary>
            获取窗口大小
            </summary>
            <param name="hWnd"></param>
            <param name="lpRect"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.APIUtils.WindowsAPI.GetWindowThreadProcessId(System.IntPtr,System.Int32@)">
            <summary>
            获取窗口所在进程ID
            </summary>
            <param name="hwnd"></param>
            <param name="pid"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.APIUtils.WindowsAPI.GetWindowText(System.IntPtr,System.Text.StringBuilder,System.Int32)">
            <summary>
            获取窗体标题
            </summary>
            <param name="hWnd"></param>
            <param name="lpString"></param>
            <param name="nMaxCount"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.APIUtils.WindowsAPI.GetNowWindowName">
            <summary>
            当前窗口标题
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.APIUtils.WindowsAPI.GetNowProcessName">
            <summary>
            当前窗口进程名
            </summary>
            <returns></returns>
        </member>
        <member name="T:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.DeviceContextValues">
            <summary>Values to pass to the GetDCEx method.</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.DeviceContextValues.Window">
            <summary>DCX_WINDOW: Returns a DC that corresponds to the window rectangle rather
            than the client rectangle.</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.DeviceContextValues.Cache">
            <summary>DCX_CACHE: Returns a DC from the cache, rather than the OWNDC or CLASSDC
            window. Essentially overrides CS_OWNDC and CS_CLASSDC.</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.DeviceContextValues.NoResetAttrs">
            <summary>DCX_NORESETATTRS: Does not reset the attributes of this DC to the
            default attributes when this DC is released.</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.DeviceContextValues.ClipChildren">
            <summary>DCX_CLIPCHILDREN: Excludes the visible regions of all child windows
            below the window identified by hWnd.</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.DeviceContextValues.ClipSiblings">
            <summary>DCX_CLIPSIBLINGS: Excludes the visible regions of all sibling windows
            above the window identified by hWnd.</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.DeviceContextValues.ParentClip">
            <summary>DCX_PARENTCLIP: Uses the visible region of the parent window. The
            parent's WS_CLIPCHILDREN and CS_PARENTDC style bits are ignored. The origin is
            set to the upper-left corner of the window identified by hWnd.</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.DeviceContextValues.ExcludeRgn">
            <summary>DCX_EXCLUDERGN: The clipping region identified by hrgnClip is excluded
            from the visible region of the returned DC.</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.DeviceContextValues.IntersectRgn">
            <summary>DCX_INTERSECTRGN: The clipping region identified by hrgnClip is
            intersected with the visible region of the returned DC.</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.DeviceContextValues.ExcludeUpdate">
            <summary>DCX_EXCLUDEUPDATE: Unknown...Undocumented</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.DeviceContextValues.IntersectUpdate">
            <summary>DCX_INTERSECTUPDATE: Unknown...Undocumented</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.DeviceContextValues.LockWindowUpdate">
            <summary>DCX_LOCKWINDOWUPDATE: Allows drawing even if there is a LockWindowUpdate
            call in effect that would otherwise exclude this window. Used for drawing during
            tracking.</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.DeviceContextValues.UseStyle">
            <summary>DCX_USESTYLE: Undocumented, something related to WM_NCPAINT message.</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.DeviceContextValues.Validate">
            <summary>DCX_VALIDATE When specified with DCX_INTERSECTUPDATE, causes the DC to
            be completely validated. Using this function with both DCX_INTERSECTUPDATE and
            DCX_VALIDATE is identical to using the BeginPaint function.</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.RedrawWindowFlags.Invalidate">
            <summary>
            Invalidates the rectangle or region that you specify in lprcUpdate or hrgnUpdate.
            You can set only one of these parameters to a non-NULL value. If both are NULL, RDW_INVALIDATE invalidates the entire window.
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.RedrawWindowFlags.InternalPaint">
            <summary>Causes the OS to post a WM_PAINT message to the window regardless of whether a portion of the window is invalid.</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.RedrawWindowFlags.Erase">
            <summary>
            Causes the window to receive a WM_ERASEBKGND message when the window is repainted.
            Specify this value in combination with the RDW_INVALIDATE value; otherwise, RDW_ERASE has no effect.
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.RedrawWindowFlags.Validate">
            <summary>
            Validates the rectangle or region that you specify in lprcUpdate or hrgnUpdate.
            You can set only one of these parameters to a non-NULL value. If both are NULL, RDW_VALIDATE validates the entire window.
            This value does not affect internal WM_PAINT messages.
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.RedrawWindowFlags.NoErase">
            <summary>Suppresses any pending WM_ERASEBKGND messages.</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.RedrawWindowFlags.NoChildren">
            <summary>Excludes child windows, if any, from the repainting operation.</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.RedrawWindowFlags.AllChildren">
            <summary>Includes child windows, if any, in the repainting operation.</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.RedrawWindowFlags.UpdateNow">
            <summary>Causes the affected windows, which you specify by setting the RDW_ALLCHILDREN and RDW_NOCHILDREN values, to receive WM_ERASEBKGND and WM_PAINT messages before the RedrawWindow returns, if necessary.</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.RedrawWindowFlags.EraseNow">
            <summary>
            Causes the affected windows, which you specify by setting the RDW_ALLCHILDREN and RDW_NOCHILDREN values, to receive WM_ERASEBKGND messages before RedrawWindow returns, if necessary.
            The affected windows receive WM_PAINT messages at the ordinary time.
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.SetWindowPosFlags.AsynWindowPos">
            <summary>If the calling thread and the thread that owns the window are attached to different input queues,
            the system posts the request to the thread that owns the window. This prevents the calling thread from
            blocking its execution while other threads process the request.</summary>
            <remarks>SWP_ASYNCWINDOWPOS</remarks>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.SetWindowPosFlags.DeferErase">
            <summary>Prevents generation of the WM_SYNCPAINT message.</summary>
            <remarks>SWP_DEFERERASE</remarks>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.SetWindowPosFlags.DrawFrame">
            <summary>Draws a frame (defined in the window's class description) around the window.</summary>
            <remarks>SWP_DRAWFRAME</remarks>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.SetWindowPosFlags.FrameChanged">
            <summary>Applies new frame styles set using the SetWindowLong function. Sends a WM_NCCALCSIZE message to
            the window, even if the window's size is not being changed. If this flag is not specified, WM_NCCALCSIZE
            is sent only when the window's size is being changed.</summary>
            <remarks>SWP_FRAMECHANGED</remarks>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.SetWindowPosFlags.HideWindow">
            <summary>Hides the window.</summary>
            <remarks>SWP_HIDEWINDOW</remarks>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.SetWindowPosFlags.NoActivate">
            <summary>Does not activate the window. If this flag is not set, the window is activated and moved to the
            top of either the topmost or non-topmost group (depending on the setting of the hWndInsertAfter
            parameter).</summary>
            <remarks>SWP_NOACTIVATE</remarks>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.SetWindowPosFlags.NoCopyBits">
            <summary>Discards the entire contents of the client area. If this flag is not specified, the valid
            contents of the client area are saved and copied back into the client area after the window is sized or
            repositioned.</summary>
            <remarks>SWP_NOCOPYBITS</remarks>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.SetWindowPosFlags.NoMove">
            <summary>Retains the current position (ignores X and Y parameters).</summary>
            <remarks>SWP_NOMOVE</remarks>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.SetWindowPosFlags.NoOwnerZOrder">
            <summary>Does not change the owner window's position in the Z order.</summary>
            <remarks>SWP_NOOWNERZORDER</remarks>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.SetWindowPosFlags.NoRedraw">
            <summary>Does not redraw changes. If this flag is set, no repainting of any kind occurs. This applies to
            the client area, the nonclient area (including the title bar and scroll bars), and any part of the parent
            window uncovered as a result of the window being moved. When this flag is set, the application must
            explicitly invalidate or redraw any parts of the window and parent window that need redrawing.</summary>
            <remarks>SWP_NOREDRAW</remarks>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.SetWindowPosFlags.NoReposition">
            <summary>Same as the SWP_NOOWNERZORDER flag.</summary>
            <remarks>SWP_NOREPOSITION</remarks>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.SetWindowPosFlags.NoSendChanging">
            <summary>Prevents the window from receiving the WM_WINDOWPOSCHANGING message.</summary>
            <remarks>SWP_NOSENDCHANGING</remarks>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.SetWindowPosFlags.NoSize">
            <summary>Retains the current size (ignores the cx and cy parameters).</summary>
            <remarks>SWP_NOSIZE</remarks>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.SetWindowPosFlags.NoZOrder">
            <summary>Retains the current Z order (ignores the hWndInsertAfter parameter).</summary>
            <remarks>SWP_NOZORDER</remarks>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.SetWindowPosFlags.ShowWindow">
            <summary>Displays the window.</summary>
            <remarks>SWP_SHOWWINDOW</remarks>
        </member>
        <member name="T:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStyles">
            <summary>
            Window Styles.
            The following styles can be specified wherever a window style is required. After the control has been created, these styles cannot be modified, except as noted.
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStyles.WS_BORDER">
            <summary>The window has a thin-line border.</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStyles.WS_CAPTION">
            <summary>The window has a title bar (includes the WS_BORDER style).</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStyles.WS_CHILD">
            <summary>The window is a child window. A window with this style cannot have a menu bar. This style cannot be used with the WS_POPUP style.</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStyles.WS_CLIPCHILDREN">
            <summary>Excludes the area occupied by child windows when drawing occurs within the parent window. This style is used when creating the parent window.</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStyles.WS_CLIPSIBLINGS">
            <summary>
            Clips child windows relative to each other; that is, when a particular child window receives a WM_PAINT message, the WS_CLIPSIBLINGS style clips all other overlapping child windows out of the region of the child window to be updated.
            If WS_CLIPSIBLINGS is not specified and child windows overlap, it is possible, when drawing within the client area of a child window, to draw within the client area of a neighboring child window.
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStyles.WS_DISABLED">
            <summary>The window is initially disabled. A disabled window cannot receive input from the user. To change this after a window has been created, use the EnableWindow function.</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStyles.WS_DLGFRAME">
            <summary>The window has a border of a style typically used with dialog boxes. A window with this style cannot have a title bar.</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStyles.WS_GROUP">
            <summary>
            The window is the first control of a group of controls. The group consists of this first control and all controls defined after it, up to the next control with the WS_GROUP style.
            The first control in each group usually has the WS_TABSTOP style so that the user can move from group to group. The user can subsequently change the keyboard focus from one control in the group to the next control in the group by using the direction keys.
            You can turn this style on and off to change dialog box navigation. To change this style after a window has been created, use the SetWindowLong function.
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStyles.WS_HSCROLL">
            <summary>The window has a horizontal scroll bar.</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStyles.WS_MAXIMIZE">
            <summary>The window is initially maximized.</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStyles.WS_MAXIMIZEBOX">
            <summary>The window has a maximize button. Cannot be combined with the WS_EX_CONTEXTHELP style. The WS_SYSMENU style must also be specified.</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStyles.WS_MINIMIZE">
            <summary>The window is initially minimized.</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStyles.WS_MINIMIZEBOX">
            <summary>The window has a minimize button. Cannot be combined with the WS_EX_CONTEXTHELP style. The WS_SYSMENU style must also be specified.</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStyles.WS_OVERLAPPED">
            <summary>The window is an overlapped window. An overlapped window has a title bar and a border.</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStyles.WS_POPUP">
            <summary>The window is a pop-up window. This style cannot be used with the WS_CHILD style.</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStyles.WS_SIZEFRAME">
            <summary>The window has a sizing border.</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStyles.WS_SYSMENU">
            <summary>The window has a window menu on its title bar. The WS_CAPTION style must also be specified.</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStyles.WS_TABSTOP">
            <summary>
            The window is a control that can receive the keyboard focus when the user presses the TAB key.
            Pressing the TAB key changes the keyboard focus to the next control with the WS_TABSTOP style.
            You can turn this style on and off to change dialog box navigation. To change this style after a window has been created, use the SetWindowLong function.
            For user-created windows and modeless dialogs to work with tab stops, alter the message loop to call the IsDialogMessage function.
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStyles.WS_VISIBLE">
            <summary>The window is initially visible. This style can be turned on and off by using the ShowWindow or SetWindowPos function.</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStyles.WS_VSCROLL">
            <summary>The window has a vertical scroll bar.</summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStylesEx.WS_EX_ACCEPTFILES">
            <summary>
            Specifies that a window created with this style accepts drag-drop files.
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStylesEx.WS_EX_APPWINDOW">
            <summary>
            Forces a top-level window onto the taskbar when the window is visible.
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStylesEx.WS_EX_CLIENTEDGE">
            <summary>
            Specifies that a window has a border with a sunken edge.
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStylesEx.WS_EX_COMPOSITED">
            <summary>
            Windows XP: Paints all descendants of a window in bottom-to-top painting order using double-buffering. For more information, see Remarks. This cannot be used if the window has a class style of either CS_OWNDC or CS_CLASSDC.
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStylesEx.WS_EX_CONTEXTHELP">
            <summary>
            Includes a question mark in the title bar of the window. When the user clicks the question mark, the cursor changes to a question mark with a pointer. If the user then clicks a child window, the child receives a WM_HELP message. The child window should pass the message to the parent window procedure, which should call the WinHelp function using the HELP_WM_HELP command. The Help application displays a pop-up window that typically contains help for the child window.
            WS_EX_CONTEXTHELP cannot be used with the WS_MAXIMIZEBOX or WS_MINIMIZEBOX styles.
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStylesEx.WS_EX_CONTROLPARENT">
            <summary>
            The window itself contains child windows that should take part in dialog box navigation. If this style is specified, the dialog manager recurses into children of this window when performing navigation operations such as handling the TAB key, an arrow key, or a keyboard mnemonic.
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStylesEx.WS_EX_DLGMODALFRAME">
            <summary>
            Creates a window that has a double border; the window can, optionally, be created with a title bar by specifying the WS_CAPTION style in the dwStyle parameter.
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStylesEx.WS_EX_LAYERED">
            <summary>
            Windows 2000/XP: Creates a layered window. Note that this cannot be used for child windows. Also, this cannot be used if the window has a class style of either CS_OWNDC or CS_CLASSDC.
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStylesEx.WS_EX_LAYOUTRTL">
            <summary>
            Arabic and Hebrew versions of Windows 98/Me, Windows 2000/XP: Creates a window whose horizontal origin is on the right edge. Increasing horizontal values advance to the left.
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStylesEx.WS_EX_LEFT">
            <summary>
            Creates a window that has generic left-aligned properties. This is the default.
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStylesEx.WS_EX_LEFTSCROLLBAR">
            <summary>
            If the shell language is Hebrew, Arabic, or another language that supports reading order alignment, the vertical scroll bar (if present) is to the left of the client area. For other languages, the style is ignored.
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStylesEx.WS_EX_LTRREADING">
            <summary>
            The window text is displayed using left-to-right reading-order properties. This is the default.
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStylesEx.WS_EX_MDICHILD">
            <summary>
            Creates a multiple-document interface (MDI) child window.
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStylesEx.WS_EX_NOACTIVATE">
            <summary>
            Windows 2000/XP: A top-level window created with this style does not become the foreground window when the user clicks it. The system does not bring this window to the foreground when the user minimizes or closes the foreground window.
            To activate the window, use the SetActiveWindow or SetForegroundWindow function.
            The window does not appear on the taskbar by default. To force the window to appear on the taskbar, use the WS_EX_APPWINDOW style.
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStylesEx.WS_EX_NOINHERITLAYOUT">
            <summary>
            Windows 2000/XP: A window created with this style does not pass its window layout to its child windows.
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStylesEx.WS_EX_NOPARENTNOTIFY">
            <summary>
            Specifies that a child window created with this style does not send the WM_PARENTNOTIFY message to its parent window when it is created or destroyed.
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStylesEx.WS_EX_OVERLAPPEDWINDOW">
            <summary>
            Combines the WS_EX_CLIENTEDGE and WS_EX_WINDOWEDGE styles.
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStylesEx.WS_EX_PALETTEWINDOW">
            <summary>
            Combines the WS_EX_WINDOWEDGE, WS_EX_TOOLWINDOW, and WS_EX_TOPMOST styles.
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStylesEx.WS_EX_RIGHT">
            <summary>
            The window has generic "right-aligned" properties. This depends on the window class. This style has an effect only if the shell language is Hebrew, Arabic, or another language that supports reading-order alignment; otherwise, the style is ignored.
            Using the WS_EX_RIGHT style for static or edit controls has the same effect as using the SS_RIGHT or ES_RIGHT style, respectively. Using this style with button controls has the same effect as using BS_RIGHT and BS_RIGHTBUTTON styles.
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStylesEx.WS_EX_RIGHTSCROLLBAR">
            <summary>
            Vertical scroll bar (if present) is to the right of the client area. This is the default.
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStylesEx.WS_EX_RTLREADING">
            <summary>
            If the shell language is Hebrew, Arabic, or another language that supports reading-order alignment, the window text is displayed using right-to-left reading-order properties. For other languages, the style is ignored.
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStylesEx.WS_EX_STATICEDGE">
            <summary>
            Creates a window with a three-dimensional border style intended to be used for items that do not accept user input.
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStylesEx.WS_EX_TOOLWINDOW">
            <summary>
            Creates a tool window; that is, a window intended to be used as a floating toolbar. A tool window has a title bar that is shorter than a normal title bar, and the window title is drawn using a smaller font. A tool window does not appear in the taskbar or in the dialog that appears when the user presses ALT+TAB. If a tool window has a system menu, its icon is not displayed on the title bar. However, you can display the system menu by right-clicking or by typing ALT+SPACE.
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStylesEx.WS_EX_TOPMOST">
            <summary>
            Specifies that a window created with this style should be placed above all non-topmost windows and should stay above them, even when the window is deactivated. To add or remove this style, use the SetWindowPos function.
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStylesEx.WS_EX_TRANSPARENT">
            <summary>
            Specifies that a window created with this style should not be painted until siblings beneath the window (that were created by the same thread) have been painted. The window appears transparent because the bits of underlying sibling windows have already been painted.
            To achieve transparency without these restrictions, use the SetWindowRgn function.
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowStylesEx.WS_EX_WINDOWEDGE">
            <summary>
            Specifies that a window has a border with a raised edge.
            </summary>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.SetWindowLong(System.IntPtr,Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawAPI.WindowLongFlags,System.Int32)">
            <summary>
            Changes an attribute of the specified window. The function also sets the 32-bit (long) value at the specified offset into the extra window memory.
            </summary>
            <param name="hWnd">A handle to the window and, indirectly, the class to which the window belongs..</param>
            <param name="nIndex">GWL_EXSTYLE, GWL_HINSTANCE, GWL_ID, GWL_STYLE, GWL_USERDATA, GWL_WNDPROC </param>
            <param name="dwNewLong">The replacement value.</param>
            <returns>If the function succeeds, the return value is the previous value of the specified 32-bit integer.
            If the function fails, the return value is zero. To get extended error information, call GetLastError. </returns>
        </member>
        <member name="T:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawTool">
            <summary>
            桌面绘制工具
            </summary>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawTool.Paint(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            将图片绘制到桌面上
            </summary>
            <param name="file"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.APIUtils.WinDrawUtils.WindowsDrawTool.Paint(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            将图片绘制到桌面上
            </summary>
            <param name="image"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.APIUtils.WindowsHotKeyAPI.RegisterHotKey(System.IntPtr,System.Int32,Azylee.Core.WindowsUtils.APIUtils.WindowsHotKeyAPI.KeyModifiers,System.Windows.Forms.Keys)">
            <summary>
            注册热键
            </summary>
            <param name="hWnd">要定义热键的窗口的句柄</param>
            <param name="id">定义热键ID（不能与其它ID重复） </param>
            <param name="fsModifiers">标识热键是否在按Alt、Ctrl、Shift、Windows等键时才会生效</param>
            <param name="vk">定义热键的内容</param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.APIUtils.WindowsHotKeyAPI.UnregisterHotKey(System.IntPtr,System.Int32)">
            <summary>
            删除热键
            </summary>
            <param name="hWnd">要取消热键的窗口的句柄</param>
            <param name="id">要取消热键的ID</param>
            <returns></returns>
        </member>
        <member name="T:Azylee.Core.WindowsUtils.BrowserUtils.BrowserSelector">
            <summary>
            浏览器选择器
            </summary>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.BrowserUtils.BrowserSelector.ModernBrowser(System.String@)">
            <summary>
            现代浏览器
            </summary>
            <param name="browser"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.BrowserUtils.BrowserSelector.StoneAgeIE(System.String@)">
            <summary>
            石器时代浏览器IE
            </summary>
            <param name="browser"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.ClipboardUtils.ClipboardTool.SetText(System.String)">
            <summary>
            设置剪贴板的文本内容
            </summary>
            <param name="s">文本内容</param>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.ClipboardUtils.ClipboardTool.GetText">
            <summary>
            获取剪贴板中的文本内容
            </summary>
            <returns>返回剪贴板文本</returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.ClipboardUtils.ClipboardTool.GetBitmap">
            <summary>
            获取剪贴板位图格式数据
            </summary>
            <returns>位图</returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.CMDUtils.CMDNetstatTool.FindByPort(System.Int32,System.Boolean)">
            <summary>
            根据端口号查询列表,过滤pid0（item1：端口、item2：pid）
            </summary>
            <param name="port">端口号</param>
            <param name="fuzzy">模糊匹配</param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.CMDUtils.CMDNetstatTool.Find(System.String)">
            <summary>
            查询列表（item1：端口、item2：pid）
            </summary>
            <param name="content">查询内容</param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.CMDUtils.CMDNetstatTool.GetAvailablePorts(System.Byte,System.Int32)">
            <summary>
            随机获取可用的端口号
            </summary>
            <param name="count">需要的端口号个数</param>
            <param name="start">起始端口</param>
            <returns></returns>
        </member>
        <member name="T:Azylee.Core.WindowsUtils.CMDUtils.CMDProcessTool">
            <summary>
            CMD进程启动工具
            </summary>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.CMDUtils.CMDProcessTool.GetProcess(System.String,Azylee.Core.WindowsUtils.AdminUtils.WindowsAccountModel)">
            <summary>
            创建cmd的进程
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.CMDUtils.CMDProcessTool.Execute(System.String,System.Action{System.String},Azylee.Core.WindowsUtils.AdminUtils.WindowsAccountModel)">
            <summary>
            开始运行CMD命令
            </summary>
            <param name="cmd"></param>
            <param name="output">输出动作</param>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.CMDUtils.CMDProcessTool.Execute(System.String,Azylee.Core.WindowsUtils.AdminUtils.WindowsAccountModel)">
            <summary>
            运行CMD并读取结果（建议执行返回数据较小的命令）
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="T:Azylee.Core.WindowsUtils.CMDUtils.CMDServiceTool">
            <summary>
            CMD 系统服务工具类
            </summary>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.CMDUtils.CMDServiceTool.Install(System.String,System.String,Azylee.Core.WindowsUtils.AdminUtils.WindowsAccountModel)">
            <summary>
            安装服务（安装、运行、设置自启，一条龙服务）
            </summary>
            <param name="name">服务名</param>
            <param name="path">应用程序路径</param>
            <param name="account">运行账户信息</param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.CMDUtils.CMDServiceTool.Uninstall(System.String,Azylee.Core.WindowsUtils.AdminUtils.WindowsAccountModel)">
            <summary>
            卸载服务（关闭、删除，一条龙服务）
            </summary>
            <param name="name"></param>
            <param name="account">运行账户信息</param>
        </member>
        <member name="T:Azylee.Core.WindowsUtils.ConsoleUtils.Cons">
            <summary>
            控制台输出工具
            </summary>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.ConsoleUtils.Cons.Log(System.String,Azylee.Core.WindowsUtils.ConsoleUtils.ConsColorMode)">
            <summary>
            输出换行内容（advanced 高级版）
            </summary>
            <param name="value">内容</param>
            <param name="mode">文字颜色</param>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.ConsoleUtils.Cons.Write(System.String)">
            <summary>
            输出内容
            </summary>
            <param name="value">内容</param>
            <param name="color">文字颜色</param>
            <param name="bgcolor">背景颜色</param>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.ConsoleUtils.Cons.WriteLine(System.String)">
            <summary>
            输出换行内容
            </summary>
            <param name="value">内容</param>
            <param name="color">文字颜色</param>
            <param name="bgcolor">背景颜色</param>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.ConsoleUtils.Cons.AllocConsole">
            <summary>
            启用系统控制台输出
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.ConsoleUtils.Cons.FreeConsole">
            <summary>
            关闭系统控制台
            </summary>
            <returns></returns>
        </member>
        <member name="T:Azylee.Core.WindowsUtils.ConsoleUtils.ConsColorMode">
            <summary>
            控制台颜色模式
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.ConsoleUtils.ConsColorMode.Default">
            <summary>
            默认
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.ConsoleUtils.ConsColorMode.Muted">
            <summary>
            柔和
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.ConsoleUtils.ConsColorMode.Primary">
            <summary>
            重要
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.ConsoleUtils.ConsColorMode.Secondary">
            <summary>
            副标题
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.ConsoleUtils.ConsColorMode.Success">
            <summary>
            成功
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.ConsoleUtils.ConsColorMode.Info">
            <summary>
            提示
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.ConsoleUtils.ConsColorMode.Warning">
            <summary>
            警告
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.ConsoleUtils.ConsColorMode.Danger">
            <summary>
            危险
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.ConsoleUtils.ConsColorMode.Dark">
            <summary>
            深色
            </summary>
        </member>
        <member name="F:Azylee.Core.WindowsUtils.ConsoleUtils.ConsColorMode.Light">
            <summary>
            浅色
            </summary>
        </member>
        <member name="T:Azylee.Core.WindowsUtils.HookUtils.KeyboardHook">
            <summary>
            键盘钩子
            [以下代码来自某网友，并非本人原创]
            测试发现有问题，暂不使用
            </summary>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.HookUtils.UserActivityHook.#ctor(System.Reflection.Module)">
            <summary>
            Default constructor - starts hooks automatically
            </summary>
        </member>
        <member name="T:Azylee.Core.WindowsUtils.InfoUtils.ComputerInfoTool">
            <summary>
            计算机信息
            </summary>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.ComputerInfoTool.CpuInfo">
            <summary>
            CPU 信息
            【序列号、型号】
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.ComputerInfoTool.NetworkCardInfo">
            <summary>
            网卡信息
            【名称、描述、物理地址（Mac）、Ip地址、网关地址】
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.ComputerInfoTool.GraphicsCardInfo">
            <summary>
            显卡型号
            【型号、RAM】
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.ComputerInfoTool.SoundCardModel">
            <summary>
            声卡型号
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.ComputerInfoTool.RAMModel">
            <summary>
            内存型号
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.ComputerInfoTool.TotalPhysicalMemory">
            <summary>
            物理内存（单位：KB）
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.ComputerInfoTool.AvailablePhysicalMemory">
            <summary>
            可用物理内存（单位：KB）
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.ComputerInfoTool.HardDiskInfo">
            <summary>
            硬盘信息
            【序列号、型号】
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.ComputerInfoTool.MachineName">
            <summary>
            计算机名
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.ComputerInfoTool.BoardInfo">
            <summary>
            主板信息
            【制造商、型号、序列号】
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.ComputerInfoTool.OsInfo">
            <summary>
            操作系统信息
            【系统名称、系统路劲、安装时间】
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.ComputerInfoTool.SystemType">
            <summary>
            系统类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.ComputerInfoTool.UserName">
            <summary>
            当前用户名
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.ComputerInfoTool.UserName2">
            <summary>
            当前用户名
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.ComputerInfoTool.UserNames">
            <summary>
            所有用户名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.ComputerInfoTool.UserDomainName">
            <summary>
            域名
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.ComputerInfoTool.TickCount">
            <summary>
            系统启动后的毫秒数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.ComputerInfoTool.StartTime">
            <summary>
             获取机器开机时间 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.ComputerInfoTool.ProcessorCount">
            <summary>
            处理器数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.ComputerInfoTool.OSVersion">
            <summary>
            平台标识和版本号
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.ComputerInfoTool.Is64BitOperatingSystem">
            <summary>
            64位操作系统
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.ComputerInfoTool.GetSystemDriveTotalSize">
            <summary>
            获取系统盘总容量（单位：KB）
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.ComputerInfoTool.GetSystemDriveAvailableSize">
            <summary>
            获取系统盘可用容量（单位：KB）
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.ComputerInfoTool.GetLastFormatTime(System.String)">
            <summary>
            获取磁盘上次格式化时间
            </summary>
            <param name="dstr"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.ComputerStatusTool.Processor">
            <summary>
            获取 Processor（可获取CPU使用率）
            </summary>
            <returns></returns>
        </member>
        <member name="T:Azylee.Core.WindowsUtils.InfoUtils.ComputerType">
            <summary>
            计算机类型
            </summary>
        </member>
        <member name="T:Azylee.Core.WindowsUtils.InfoUtils.ComputerTypeTool">
            <summary>
            获取计算机类型
            </summary>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.ComputerTypeTool.Get">
            <summary>
            获取类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.DriveTool.GetSystemDriveTotalSize">
            <summary>
            获取系统盘总容量（单位：KB）
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.DriveTool.GetDriveTotalSize(System.String)">
            <summary>
            获取磁盘总容量（单位：KB）
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.DriveTool.GetSystemDriveAvailableSize">
            <summary>
            获取系统盘可用容量（单位：KB）
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.DriveTool.GetDriveAvailableSize(System.String)">
            <summary>
            获取磁盘可用容量（单位：KB）
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.NetCardInfoTool.GetNetworkCardInfo">
            <summary>
            获取网卡信息
            【名称、描述、物理地址（Mac）、Ip地址、网关地址】
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.NetCardInfoTool.GetNetworkCardInfoId">
            <summary>
            获取网卡信息
            【id,名称、描述、物理地址（Mac）、Ip地址、网关地址】
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.NetCardInfoTool.InternetGetConnectedState(System.Int32@,System.Int32)">
            <summary>
            获取网络连接状态
            </summary>
            <param name="dwFlag"></param>
            <param name="dwReserved"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.NetCardInfoTool.LocalConnectionStatus">
            <summary>
            获取网络连接状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.NetCardInfoTool.GetOpStatus(System.String)">
            <summary>
            获取网络连接操作状态
            </summary>
            <param name="mac"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.NetCardInfoTool.GetInstanceNames">
            <summary>
            获取网卡实例名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.NetCardInfoTool.GetIPv4Address">
            <summary>
            获取本机IPv4的IP地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.NetCardInfoTool.GetAllIPv4Address">
            <summary>
            获取本机IPv4的IP地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.NetCardInfoTool.ShortMac(System.String)">
            <summary>
            全小写MAC地址
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.NetCardInfoTool.MACFormat(System.String,System.Boolean)">
            <summary>
            格式化MAC地址（大写、':' 分割）
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.PatchInfoTool.Get">
            <summary>
            获取计算机所有补丁
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.PatchInfoTool.Exist(System.String)">
            <summary>
            检查是否存在补丁
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:Azylee.Core.WindowsUtils.InfoUtils.SoftwareInfo.Name">
            <summary>
            软件名称
            </summary>
        </member>
        <member name="P:Azylee.Core.WindowsUtils.InfoUtils.SoftwareInfo.Version">
            <summary>
            软件版本
            </summary>
        </member>
        <member name="P:Azylee.Core.WindowsUtils.InfoUtils.SoftwareInfo.Publisher">
            <summary>
            开发商
            </summary>
        </member>
        <member name="P:Azylee.Core.WindowsUtils.InfoUtils.SoftwareInfo.InstallLocation">
            <summary>
            安装后路径
            </summary>
        </member>
        <member name="P:Azylee.Core.WindowsUtils.InfoUtils.SoftwareInfo.HelpLink">
            <summary>
            帮助链接
            </summary>
        </member>
        <member name="P:Azylee.Core.WindowsUtils.InfoUtils.SoftwareInfo.URLInfoAbout">
            <summary>
            介绍链接
            </summary>
        </member>
        <member name="P:Azylee.Core.WindowsUtils.InfoUtils.SoftwareInfo.UninstallString">
            <summary>
            卸载字符串
            </summary>
        </member>
        <member name="P:Azylee.Core.WindowsUtils.InfoUtils.SoftwareInfo.EstimatedSize">
            <summary>
            空间占用
            </summary>
        </member>
        <member name="P:Azylee.Core.WindowsUtils.InfoUtils.SoftwareInfo.InstallDate">
            <summary>
            安装日期
            </summary>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.SoftwareTool.ExistControl(System.String)">
            <summary>
            存在控制面板
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.SoftwareTool.ExistProcess(System.String)">
            <summary>
            存在进程
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.SoftwareTool.ExistProcess2(System.String)">
            <summary>
            存在进程（单字符串 [，/,] 分割）
            </summary>
            <param name="names"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.SoftwareTool.ExistFile(System.String)">
            <summary>
            存在文件
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.InfoUtils.SoftwareTool.ExistRegist(System.String,System.String)">
            <summary>
            存在注册表项
            </summary>
            <param name="item"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Azylee.Core.WindowsUtils.RegisterUtils.RegisterTool">
            <summary>
            注册表操作工具
            </summary>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.RegisterUtils.RegisterTool.SetValue(System.String,System.String,System.String)">
            <summary>
            添加注册表值
            </summary>
            <param name="key"></param>
            <param name="name"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.RegisterUtils.RegisterTool.GetValue(System.String,System.String)">
            <summary>
            读取注册表值
            </summary>
            <param name="key"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.RegisterUtils.RegisterTool.DeleteValue(System.String,System.String)">
            <summary>
            删除注册表值
            </summary>
            <param name="key"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.RegisterUtils.RegisterTool.ExtractInfo(System.String,System.String@,System.String@)">
            <summary>
            分离注册表根目录和子目录
            </summary>
            <param name="key"></param>
            <param name="reg"></param>
            <param name="sub"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.RegisterUtils.RegisterTool.Open(System.String,System.Boolean)">
            <summary>
            打开注册表相应目录
            </summary>
            <param name="key">目标子项</param>
            <param name="writable">是否具有写权限</param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.RegisterUtils.RegisterTool.Create(System.String)">
            <summary>
            创建或打开注册表相应目录
            </summary>
            <param name="key">目标子项</param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.RegisterUtils.RegisterTool.Exist(System.String,System.String,System.String)">
            <summary>
            判断是否存在项、键、值匹配
            </summary>
            <param name="key"></param>
            <param name="name"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.ShareUtils.ShareInfoTool.GetList">
            <summary>
            获取计算机共享文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.ShareUtils.ShareInfoTool.ExistPath(System.String)">
            <summary>
            存在共享（模糊匹配路径开头）
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Azylee.Core.WindowsUtils.ShareUtils.ShareInfoTool.ExistName(System.String)">
            <summary>
            存在共享（匹配共享名称）
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
    </members>
</doc>
